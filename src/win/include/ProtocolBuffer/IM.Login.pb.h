// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Login.proto

#ifndef PROTOBUF_IM_2eLogin_2eproto__INCLUDED
#define PROTOBUF_IM_2eLogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include "IM.BaseDefine.pb.h"
// @@protoc_insertion_point(includes)
namespace IM {
namespace BaseDefine {
class ContactSessionInfo;
class ContactSessionInfoDefaultTypeInternal;
extern ContactSessionInfoDefaultTypeInternal _ContactSessionInfo_default_instance_;
class DepartInfo;
class DepartInfoDefaultTypeInternal;
extern DepartInfoDefaultTypeInternal _DepartInfo_default_instance_;
class GroupInfo;
class GroupInfoDefaultTypeInternal;
extern GroupInfoDefaultTypeInternal _GroupInfo_default_instance_;
class GroupVersionInfo;
class GroupVersionInfoDefaultTypeInternal;
extern GroupVersionInfoDefaultTypeInternal _GroupVersionInfo_default_instance_;
class IpAddr;
class IpAddrDefaultTypeInternal;
extern IpAddrDefaultTypeInternal _IpAddr_default_instance_;
class MsgInfo;
class MsgInfoDefaultTypeInternal;
extern MsgInfoDefaultTypeInternal _MsgInfo_default_instance_;
class OfflineFileInfo;
class OfflineFileInfoDefaultTypeInternal;
extern OfflineFileInfoDefaultTypeInternal _OfflineFileInfo_default_instance_;
class PushResult;
class PushResultDefaultTypeInternal;
extern PushResultDefaultTypeInternal _PushResult_default_instance_;
class PushShieldStatus;
class PushShieldStatusDefaultTypeInternal;
extern PushShieldStatusDefaultTypeInternal _PushShieldStatus_default_instance_;
class ServerUserStat;
class ServerUserStatDefaultTypeInternal;
extern ServerUserStatDefaultTypeInternal _ServerUserStat_default_instance_;
class ShieldStatus;
class ShieldStatusDefaultTypeInternal;
extern ShieldStatusDefaultTypeInternal _ShieldStatus_default_instance_;
class UnreadInfo;
class UnreadInfoDefaultTypeInternal;
extern UnreadInfoDefaultTypeInternal _UnreadInfo_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class UserStat;
class UserStatDefaultTypeInternal;
extern UserStatDefaultTypeInternal _UserStat_default_instance_;
class UserTokenInfo;
class UserTokenInfoDefaultTypeInternal;
extern UserTokenInfoDefaultTypeInternal _UserTokenInfo_default_instance_;
}  // namespace BaseDefine
namespace Login {
class IMDeviceTokenReq;
class IMDeviceTokenReqDefaultTypeInternal;
extern IMDeviceTokenReqDefaultTypeInternal _IMDeviceTokenReq_default_instance_;
class IMDeviceTokenRsp;
class IMDeviceTokenRspDefaultTypeInternal;
extern IMDeviceTokenRspDefaultTypeInternal _IMDeviceTokenRsp_default_instance_;
class IMKickPCClientReq;
class IMKickPCClientReqDefaultTypeInternal;
extern IMKickPCClientReqDefaultTypeInternal _IMKickPCClientReq_default_instance_;
class IMKickPCClientRsp;
class IMKickPCClientRspDefaultTypeInternal;
extern IMKickPCClientRspDefaultTypeInternal _IMKickPCClientRsp_default_instance_;
class IMKickUser;
class IMKickUserDefaultTypeInternal;
extern IMKickUserDefaultTypeInternal _IMKickUser_default_instance_;
class IMLoginReq;
class IMLoginReqDefaultTypeInternal;
extern IMLoginReqDefaultTypeInternal _IMLoginReq_default_instance_;
class IMLoginRes;
class IMLoginResDefaultTypeInternal;
extern IMLoginResDefaultTypeInternal _IMLoginRes_default_instance_;
class IMLogoutReq;
class IMLogoutReqDefaultTypeInternal;
extern IMLogoutReqDefaultTypeInternal _IMLogoutReq_default_instance_;
class IMLogoutRsp;
class IMLogoutRspDefaultTypeInternal;
extern IMLogoutRspDefaultTypeInternal _IMLogoutRsp_default_instance_;
class IMMsgServReq;
class IMMsgServReqDefaultTypeInternal;
extern IMMsgServReqDefaultTypeInternal _IMMsgServReq_default_instance_;
class IMMsgServRsp;
class IMMsgServRspDefaultTypeInternal;
extern IMMsgServRspDefaultTypeInternal _IMMsgServRsp_default_instance_;
class IMPushShieldReq;
class IMPushShieldReqDefaultTypeInternal;
extern IMPushShieldReqDefaultTypeInternal _IMPushShieldReq_default_instance_;
class IMPushShieldRsp;
class IMPushShieldRspDefaultTypeInternal;
extern IMPushShieldRspDefaultTypeInternal _IMPushShieldRsp_default_instance_;
class IMQueryPushShieldReq;
class IMQueryPushShieldReqDefaultTypeInternal;
extern IMQueryPushShieldReqDefaultTypeInternal _IMQueryPushShieldReq_default_instance_;
class IMQueryPushShieldRsp;
class IMQueryPushShieldRspDefaultTypeInternal;
extern IMQueryPushShieldRspDefaultTypeInternal _IMQueryPushShieldRsp_default_instance_;
}  // namespace Login
}  // namespace IM

namespace IM {
namespace Login {

namespace protobuf_IM_2eLogin_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_IM_2eLogin_2eproto

// ===================================================================

class IMMsgServReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMMsgServReq) */ {
 public:
  IMMsgServReq();
  virtual ~IMMsgServReq();

  IMMsgServReq(const IMMsgServReq& from);

  inline IMMsgServReq& operator=(const IMMsgServReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMMsgServReq& default_instance();

  static inline const IMMsgServReq* internal_default_instance() {
    return reinterpret_cast<const IMMsgServReq*>(
               &_IMMsgServReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(IMMsgServReq* other);

  // implements Message ----------------------------------------------

  inline IMMsgServReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IMMsgServReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMMsgServReq& from);
  void MergeFrom(const IMMsgServReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMMsgServReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IM.Login.IMMsgServReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMMsgServRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMMsgServRsp) */ {
 public:
  IMMsgServRsp();
  virtual ~IMMsgServRsp();

  IMMsgServRsp(const IMMsgServRsp& from);

  inline IMMsgServRsp& operator=(const IMMsgServRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMMsgServRsp& default_instance();

  static inline const IMMsgServRsp* internal_default_instance() {
    return reinterpret_cast<const IMMsgServRsp*>(
               &_IMMsgServRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(IMMsgServRsp* other);

  // implements Message ----------------------------------------------

  inline IMMsgServRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IMMsgServRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMMsgServRsp& from);
  void MergeFrom(const IMMsgServRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMMsgServRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string prior_ip = 2;
  void clear_prior_ip();
  static const int kPriorIpFieldNumber = 2;
  const ::std::string& prior_ip() const;
  void set_prior_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_prior_ip(::std::string&& value);
  #endif
  void set_prior_ip(const char* value);
  void set_prior_ip(const char* value, size_t size);
  ::std::string* mutable_prior_ip();
  ::std::string* release_prior_ip();
  void set_allocated_prior_ip(::std::string* prior_ip);

  // string backip_ip = 3;
  void clear_backip_ip();
  static const int kBackipIpFieldNumber = 3;
  const ::std::string& backip_ip() const;
  void set_backip_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_backip_ip(::std::string&& value);
  #endif
  void set_backip_ip(const char* value);
  void set_backip_ip(const char* value, size_t size);
  ::std::string* mutable_backip_ip();
  ::std::string* release_backip_ip();
  void set_allocated_backip_ip(::std::string* backip_ip);

  // .IM.BaseDefine.ResultType result_code = 1;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::IM::BaseDefine::ResultType result_code() const;
  void set_result_code(::IM::BaseDefine::ResultType value);

  // uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMMsgServRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr prior_ip_;
  ::google::protobuf::internal::ArenaStringPtr backip_ip_;
  int result_code_;
  ::google::protobuf::uint32 port_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMLoginReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMLoginReq) */ {
 public:
  IMLoginReq();
  virtual ~IMLoginReq();

  IMLoginReq(const IMLoginReq& from);

  inline IMLoginReq& operator=(const IMLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMLoginReq& default_instance();

  static inline const IMLoginReq* internal_default_instance() {
    return reinterpret_cast<const IMLoginReq*>(
               &_IMLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(IMLoginReq* other);

  // implements Message ----------------------------------------------

  inline IMLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IMLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMLoginReq& from);
  void MergeFrom(const IMLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_name = 1;
  void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string client_version = 5;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 5;
  const ::std::string& client_version() const;
  void set_client_version(const ::std::string& value);
  #if LANG_CXX11
  void set_client_version(::std::string&& value);
  #endif
  void set_client_version(const char* value);
  void set_client_version(const char* value, size_t size);
  ::std::string* mutable_client_version();
  ::std::string* release_client_version();
  void set_allocated_client_version(::std::string* client_version);

  // .IM.BaseDefine.UserStatType online_status = 3;
  void clear_online_status();
  static const int kOnlineStatusFieldNumber = 3;
  ::IM::BaseDefine::UserStatType online_status() const;
  void set_online_status(::IM::BaseDefine::UserStatType value);

  // .IM.BaseDefine.ClientType client_type = 4;
  void clear_client_type();
  static const int kClientTypeFieldNumber = 4;
  ::IM::BaseDefine::ClientType client_type() const;
  void set_client_type(::IM::BaseDefine::ClientType value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr client_version_;
  int online_status_;
  int client_type_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMLoginRes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMLoginRes) */ {
 public:
  IMLoginRes();
  virtual ~IMLoginRes();

  IMLoginRes(const IMLoginRes& from);

  inline IMLoginRes& operator=(const IMLoginRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMLoginRes& default_instance();

  static inline const IMLoginRes* internal_default_instance() {
    return reinterpret_cast<const IMLoginRes*>(
               &_IMLoginRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(IMLoginRes* other);

  // implements Message ----------------------------------------------

  inline IMLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  IMLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMLoginRes& from);
  void MergeFrom(const IMLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string result_string = 3;
  void clear_result_string();
  static const int kResultStringFieldNumber = 3;
  const ::std::string& result_string() const;
  void set_result_string(const ::std::string& value);
  #if LANG_CXX11
  void set_result_string(::std::string&& value);
  #endif
  void set_result_string(const char* value);
  void set_result_string(const char* value, size_t size);
  ::std::string* mutable_result_string();
  ::std::string* release_result_string();
  void set_allocated_result_string(::std::string* result_string);

  // .IM.BaseDefine.UserInfo user_info = 5;
  bool has_user_info() const;
  void clear_user_info();
  static const int kUserInfoFieldNumber = 5;
  const ::IM::BaseDefine::UserInfo& user_info() const;
  ::IM::BaseDefine::UserInfo* mutable_user_info();
  ::IM::BaseDefine::UserInfo* release_user_info();
  void set_allocated_user_info(::IM::BaseDefine::UserInfo* user_info);

  // uint32 server_time = 1;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 1;
  ::google::protobuf::uint32 server_time() const;
  void set_server_time(::google::protobuf::uint32 value);

  // .IM.BaseDefine.ResultType result_code = 2;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 2;
  ::IM::BaseDefine::ResultType result_code() const;
  void set_result_code(::IM::BaseDefine::ResultType value);

  // .IM.BaseDefine.UserStatType online_status = 4;
  void clear_online_status();
  static const int kOnlineStatusFieldNumber = 4;
  ::IM::BaseDefine::UserStatType online_status() const;
  void set_online_status(::IM::BaseDefine::UserStatType value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMLoginRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr result_string_;
  ::IM::BaseDefine::UserInfo* user_info_;
  ::google::protobuf::uint32 server_time_;
  int result_code_;
  int online_status_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMLogoutReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMLogoutReq) */ {
 public:
  IMLogoutReq();
  virtual ~IMLogoutReq();

  IMLogoutReq(const IMLogoutReq& from);

  inline IMLogoutReq& operator=(const IMLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMLogoutReq& default_instance();

  static inline const IMLogoutReq* internal_default_instance() {
    return reinterpret_cast<const IMLogoutReq*>(
               &_IMLogoutReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(IMLogoutReq* other);

  // implements Message ----------------------------------------------

  inline IMLogoutReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IMLogoutReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMLogoutReq& from);
  void MergeFrom(const IMLogoutReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMLogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IM.Login.IMLogoutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMLogoutRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMLogoutRsp) */ {
 public:
  IMLogoutRsp();
  virtual ~IMLogoutRsp();

  IMLogoutRsp(const IMLogoutRsp& from);

  inline IMLogoutRsp& operator=(const IMLogoutRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMLogoutRsp& default_instance();

  static inline const IMLogoutRsp* internal_default_instance() {
    return reinterpret_cast<const IMLogoutRsp*>(
               &_IMLogoutRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(IMLogoutRsp* other);

  // implements Message ----------------------------------------------

  inline IMLogoutRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IMLogoutRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMLogoutRsp& from);
  void MergeFrom(const IMLogoutRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMLogoutRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 result_code = 1;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::google::protobuf::uint32 result_code() const;
  void set_result_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMLogoutRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 result_code_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMKickUser : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMKickUser) */ {
 public:
  IMKickUser();
  virtual ~IMKickUser();

  IMKickUser(const IMKickUser& from);

  inline IMKickUser& operator=(const IMKickUser& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMKickUser& default_instance();

  static inline const IMKickUser* internal_default_instance() {
    return reinterpret_cast<const IMKickUser*>(
               &_IMKickUser_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(IMKickUser* other);

  // implements Message ----------------------------------------------

  inline IMKickUser* New() const PROTOBUF_FINAL { return New(NULL); }

  IMKickUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMKickUser& from);
  void MergeFrom(const IMKickUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMKickUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // .IM.BaseDefine.KickReasonType kick_reason = 2;
  void clear_kick_reason();
  static const int kKickReasonFieldNumber = 2;
  ::IM::BaseDefine::KickReasonType kick_reason() const;
  void set_kick_reason(::IM::BaseDefine::KickReasonType value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMKickUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 user_id_;
  int kick_reason_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMDeviceTokenReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMDeviceTokenReq) */ {
 public:
  IMDeviceTokenReq();
  virtual ~IMDeviceTokenReq();

  IMDeviceTokenReq(const IMDeviceTokenReq& from);

  inline IMDeviceTokenReq& operator=(const IMDeviceTokenReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMDeviceTokenReq& default_instance();

  static inline const IMDeviceTokenReq* internal_default_instance() {
    return reinterpret_cast<const IMDeviceTokenReq*>(
               &_IMDeviceTokenReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(IMDeviceTokenReq* other);

  // implements Message ----------------------------------------------

  inline IMDeviceTokenReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IMDeviceTokenReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMDeviceTokenReq& from);
  void MergeFrom(const IMDeviceTokenReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMDeviceTokenReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string device_token = 2;
  void clear_device_token();
  static const int kDeviceTokenFieldNumber = 2;
  const ::std::string& device_token() const;
  void set_device_token(const ::std::string& value);
  #if LANG_CXX11
  void set_device_token(::std::string&& value);
  #endif
  void set_device_token(const char* value);
  void set_device_token(const char* value, size_t size);
  ::std::string* mutable_device_token();
  ::std::string* release_device_token();
  void set_allocated_device_token(::std::string* device_token);

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // .IM.BaseDefine.ClientType client_type = 3;
  void clear_client_type();
  static const int kClientTypeFieldNumber = 3;
  ::IM::BaseDefine::ClientType client_type() const;
  void set_client_type(::IM::BaseDefine::ClientType value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMDeviceTokenReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr device_token_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  int client_type_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMDeviceTokenRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMDeviceTokenRsp) */ {
 public:
  IMDeviceTokenRsp();
  virtual ~IMDeviceTokenRsp();

  IMDeviceTokenRsp(const IMDeviceTokenRsp& from);

  inline IMDeviceTokenRsp& operator=(const IMDeviceTokenRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMDeviceTokenRsp& default_instance();

  static inline const IMDeviceTokenRsp* internal_default_instance() {
    return reinterpret_cast<const IMDeviceTokenRsp*>(
               &_IMDeviceTokenRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(IMDeviceTokenRsp* other);

  // implements Message ----------------------------------------------

  inline IMDeviceTokenRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IMDeviceTokenRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMDeviceTokenRsp& from);
  void MergeFrom(const IMDeviceTokenRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMDeviceTokenRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMDeviceTokenRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMKickPCClientReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMKickPCClientReq) */ {
 public:
  IMKickPCClientReq();
  virtual ~IMKickPCClientReq();

  IMKickPCClientReq(const IMKickPCClientReq& from);

  inline IMKickPCClientReq& operator=(const IMKickPCClientReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMKickPCClientReq& default_instance();

  static inline const IMKickPCClientReq* internal_default_instance() {
    return reinterpret_cast<const IMKickPCClientReq*>(
               &_IMKickPCClientReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(IMKickPCClientReq* other);

  // implements Message ----------------------------------------------

  inline IMKickPCClientReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IMKickPCClientReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMKickPCClientReq& from);
  void MergeFrom(const IMKickPCClientReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMKickPCClientReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMKickPCClientReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 user_id_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMKickPCClientRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMKickPCClientRsp) */ {
 public:
  IMKickPCClientRsp();
  virtual ~IMKickPCClientRsp();

  IMKickPCClientRsp(const IMKickPCClientRsp& from);

  inline IMKickPCClientRsp& operator=(const IMKickPCClientRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMKickPCClientRsp& default_instance();

  static inline const IMKickPCClientRsp* internal_default_instance() {
    return reinterpret_cast<const IMKickPCClientRsp*>(
               &_IMKickPCClientRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(IMKickPCClientRsp* other);

  // implements Message ----------------------------------------------

  inline IMKickPCClientRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IMKickPCClientRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMKickPCClientRsp& from);
  void MergeFrom(const IMKickPCClientRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMKickPCClientRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // uint32 result_code = 2;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 2;
  ::google::protobuf::uint32 result_code() const;
  void set_result_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMKickPCClientRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 result_code_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMPushShieldReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMPushShieldReq) */ {
 public:
  IMPushShieldReq();
  virtual ~IMPushShieldReq();

  IMPushShieldReq(const IMPushShieldReq& from);

  inline IMPushShieldReq& operator=(const IMPushShieldReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMPushShieldReq& default_instance();

  static inline const IMPushShieldReq* internal_default_instance() {
    return reinterpret_cast<const IMPushShieldReq*>(
               &_IMPushShieldReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(IMPushShieldReq* other);

  // implements Message ----------------------------------------------

  inline IMPushShieldReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IMPushShieldReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMPushShieldReq& from);
  void MergeFrom(const IMPushShieldReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMPushShieldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // uint32 shield_status = 2;
  void clear_shield_status();
  static const int kShieldStatusFieldNumber = 2;
  ::google::protobuf::uint32 shield_status() const;
  void set_shield_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMPushShieldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 shield_status_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMPushShieldRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMPushShieldRsp) */ {
 public:
  IMPushShieldRsp();
  virtual ~IMPushShieldRsp();

  IMPushShieldRsp(const IMPushShieldRsp& from);

  inline IMPushShieldRsp& operator=(const IMPushShieldRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMPushShieldRsp& default_instance();

  static inline const IMPushShieldRsp* internal_default_instance() {
    return reinterpret_cast<const IMPushShieldRsp*>(
               &_IMPushShieldRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(IMPushShieldRsp* other);

  // implements Message ----------------------------------------------

  inline IMPushShieldRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IMPushShieldRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMPushShieldRsp& from);
  void MergeFrom(const IMPushShieldRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMPushShieldRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // uint32 result_code = 2;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 2;
  ::google::protobuf::uint32 result_code() const;
  void set_result_code(::google::protobuf::uint32 value);

  // uint32 shield_status = 3;
  void clear_shield_status();
  static const int kShieldStatusFieldNumber = 3;
  ::google::protobuf::uint32 shield_status() const;
  void set_shield_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMPushShieldRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 result_code_;
  ::google::protobuf::uint32 shield_status_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMQueryPushShieldReq : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMQueryPushShieldReq) */ {
 public:
  IMQueryPushShieldReq();
  virtual ~IMQueryPushShieldReq();

  IMQueryPushShieldReq(const IMQueryPushShieldReq& from);

  inline IMQueryPushShieldReq& operator=(const IMQueryPushShieldReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMQueryPushShieldReq& default_instance();

  static inline const IMQueryPushShieldReq* internal_default_instance() {
    return reinterpret_cast<const IMQueryPushShieldReq*>(
               &_IMQueryPushShieldReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(IMQueryPushShieldReq* other);

  // implements Message ----------------------------------------------

  inline IMQueryPushShieldReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IMQueryPushShieldReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMQueryPushShieldReq& from);
  void MergeFrom(const IMQueryPushShieldReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMQueryPushShieldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMQueryPushShieldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IMQueryPushShieldRsp : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:IM.Login.IMQueryPushShieldRsp) */ {
 public:
  IMQueryPushShieldRsp();
  virtual ~IMQueryPushShieldRsp();

  IMQueryPushShieldRsp(const IMQueryPushShieldRsp& from);

  inline IMQueryPushShieldRsp& operator=(const IMQueryPushShieldRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const IMQueryPushShieldRsp& default_instance();

  static inline const IMQueryPushShieldRsp* internal_default_instance() {
    return reinterpret_cast<const IMQueryPushShieldRsp*>(
               &_IMQueryPushShieldRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(IMQueryPushShieldRsp* other);

  // implements Message ----------------------------------------------

  inline IMQueryPushShieldRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IMQueryPushShieldRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const IMQueryPushShieldRsp& from);
  void MergeFrom(const IMQueryPushShieldRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IMQueryPushShieldRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes attach_data = 20;
  void clear_attach_data();
  static const int kAttachDataFieldNumber = 20;
  const ::std::string& attach_data() const;
  void set_attach_data(const ::std::string& value);
  #if LANG_CXX11
  void set_attach_data(::std::string&& value);
  #endif
  void set_attach_data(const char* value);
  void set_attach_data(const void* value, size_t size);
  ::std::string* mutable_attach_data();
  ::std::string* release_attach_data();
  void set_allocated_attach_data(::std::string* attach_data);

  // uint32 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // uint32 result_code = 2;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 2;
  ::google::protobuf::uint32 result_code() const;
  void set_result_code(::google::protobuf::uint32 value);

  // uint32 shield_status = 3;
  void clear_shield_status();
  static const int kShieldStatusFieldNumber = 3;
  ::google::protobuf::uint32 shield_status() const;
  void set_shield_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.Login.IMQueryPushShieldRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr attach_data_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 result_code_;
  ::google::protobuf::uint32 shield_status_;
  mutable int _cached_size_;
  friend struct protobuf_IM_2eLogin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// IMMsgServReq

// -------------------------------------------------------------------

// IMMsgServRsp

// .IM.BaseDefine.ResultType result_code = 1;
inline void IMMsgServRsp::clear_result_code() {
  result_code_ = 0;
}
inline ::IM::BaseDefine::ResultType IMMsgServRsp::result_code() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMMsgServRsp.result_code)
  return static_cast< ::IM::BaseDefine::ResultType >(result_code_);
}
inline void IMMsgServRsp::set_result_code(::IM::BaseDefine::ResultType value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMMsgServRsp.result_code)
}

// string prior_ip = 2;
inline void IMMsgServRsp::clear_prior_ip() {
  prior_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMMsgServRsp::prior_ip() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMMsgServRsp.prior_ip)
  return prior_ip_.GetNoArena();
}
inline void IMMsgServRsp::set_prior_ip(const ::std::string& value) {
  
  prior_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMMsgServRsp.prior_ip)
}
#if LANG_CXX11
inline void IMMsgServRsp::set_prior_ip(::std::string&& value) {
  
  prior_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMMsgServRsp.prior_ip)
}
#endif
inline void IMMsgServRsp::set_prior_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prior_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMMsgServRsp.prior_ip)
}
inline void IMMsgServRsp::set_prior_ip(const char* value, size_t size) {
  
  prior_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMMsgServRsp.prior_ip)
}
inline ::std::string* IMMsgServRsp::mutable_prior_ip() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMMsgServRsp.prior_ip)
  return prior_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMMsgServRsp::release_prior_ip() {
  // @@protoc_insertion_point(field_release:IM.Login.IMMsgServRsp.prior_ip)
  
  return prior_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgServRsp::set_allocated_prior_ip(::std::string* prior_ip) {
  if (prior_ip != NULL) {
    
  } else {
    
  }
  prior_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prior_ip);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMMsgServRsp.prior_ip)
}

// string backip_ip = 3;
inline void IMMsgServRsp::clear_backip_ip() {
  backip_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMMsgServRsp::backip_ip() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMMsgServRsp.backip_ip)
  return backip_ip_.GetNoArena();
}
inline void IMMsgServRsp::set_backip_ip(const ::std::string& value) {
  
  backip_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMMsgServRsp.backip_ip)
}
#if LANG_CXX11
inline void IMMsgServRsp::set_backip_ip(::std::string&& value) {
  
  backip_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMMsgServRsp.backip_ip)
}
#endif
inline void IMMsgServRsp::set_backip_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  backip_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMMsgServRsp.backip_ip)
}
inline void IMMsgServRsp::set_backip_ip(const char* value, size_t size) {
  
  backip_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMMsgServRsp.backip_ip)
}
inline ::std::string* IMMsgServRsp::mutable_backip_ip() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMMsgServRsp.backip_ip)
  return backip_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMMsgServRsp::release_backip_ip() {
  // @@protoc_insertion_point(field_release:IM.Login.IMMsgServRsp.backip_ip)
  
  return backip_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMMsgServRsp::set_allocated_backip_ip(::std::string* backip_ip) {
  if (backip_ip != NULL) {
    
  } else {
    
  }
  backip_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), backip_ip);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMMsgServRsp.backip_ip)
}

// uint32 port = 4;
inline void IMMsgServRsp::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 IMMsgServRsp::port() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMMsgServRsp.port)
  return port_;
}
inline void IMMsgServRsp::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMMsgServRsp.port)
}

// -------------------------------------------------------------------

// IMLoginReq

// string user_name = 1;
inline void IMLoginReq::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMLoginReq::user_name() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMLoginReq.user_name)
  return user_name_.GetNoArena();
}
inline void IMLoginReq::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMLoginReq.user_name)
}
#if LANG_CXX11
inline void IMLoginReq::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMLoginReq.user_name)
}
#endif
inline void IMLoginReq::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMLoginReq.user_name)
}
inline void IMLoginReq::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMLoginReq.user_name)
}
inline ::std::string* IMLoginReq::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMLoginReq.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMLoginReq::release_user_name() {
  // @@protoc_insertion_point(field_release:IM.Login.IMLoginReq.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMLoginReq::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMLoginReq.user_name)
}

// string password = 2;
inline void IMLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMLoginReq::password() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMLoginReq.password)
  return password_.GetNoArena();
}
inline void IMLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMLoginReq.password)
}
#if LANG_CXX11
inline void IMLoginReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMLoginReq.password)
}
#endif
inline void IMLoginReq::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMLoginReq.password)
}
inline void IMLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMLoginReq.password)
}
inline ::std::string* IMLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMLoginReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:IM.Login.IMLoginReq.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMLoginReq.password)
}

// .IM.BaseDefine.UserStatType online_status = 3;
inline void IMLoginReq::clear_online_status() {
  online_status_ = 0;
}
inline ::IM::BaseDefine::UserStatType IMLoginReq::online_status() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMLoginReq.online_status)
  return static_cast< ::IM::BaseDefine::UserStatType >(online_status_);
}
inline void IMLoginReq::set_online_status(::IM::BaseDefine::UserStatType value) {
  
  online_status_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMLoginReq.online_status)
}

// .IM.BaseDefine.ClientType client_type = 4;
inline void IMLoginReq::clear_client_type() {
  client_type_ = 0;
}
inline ::IM::BaseDefine::ClientType IMLoginReq::client_type() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMLoginReq.client_type)
  return static_cast< ::IM::BaseDefine::ClientType >(client_type_);
}
inline void IMLoginReq::set_client_type(::IM::BaseDefine::ClientType value) {
  
  client_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMLoginReq.client_type)
}

// string client_version = 5;
inline void IMLoginReq::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMLoginReq::client_version() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMLoginReq.client_version)
  return client_version_.GetNoArena();
}
inline void IMLoginReq::set_client_version(const ::std::string& value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMLoginReq.client_version)
}
#if LANG_CXX11
inline void IMLoginReq::set_client_version(::std::string&& value) {
  
  client_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMLoginReq.client_version)
}
#endif
inline void IMLoginReq::set_client_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMLoginReq.client_version)
}
inline void IMLoginReq::set_client_version(const char* value, size_t size) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMLoginReq.client_version)
}
inline ::std::string* IMLoginReq::mutable_client_version() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMLoginReq.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMLoginReq::release_client_version() {
  // @@protoc_insertion_point(field_release:IM.Login.IMLoginReq.client_version)
  
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMLoginReq::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    
  } else {
    
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMLoginReq.client_version)
}

// -------------------------------------------------------------------

// IMLoginRes

// uint32 server_time = 1;
inline void IMLoginRes::clear_server_time() {
  server_time_ = 0u;
}
inline ::google::protobuf::uint32 IMLoginRes::server_time() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMLoginRes.server_time)
  return server_time_;
}
inline void IMLoginRes::set_server_time(::google::protobuf::uint32 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMLoginRes.server_time)
}

// .IM.BaseDefine.ResultType result_code = 2;
inline void IMLoginRes::clear_result_code() {
  result_code_ = 0;
}
inline ::IM::BaseDefine::ResultType IMLoginRes::result_code() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMLoginRes.result_code)
  return static_cast< ::IM::BaseDefine::ResultType >(result_code_);
}
inline void IMLoginRes::set_result_code(::IM::BaseDefine::ResultType value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMLoginRes.result_code)
}

// string result_string = 3;
inline void IMLoginRes::clear_result_string() {
  result_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMLoginRes::result_string() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMLoginRes.result_string)
  return result_string_.GetNoArena();
}
inline void IMLoginRes::set_result_string(const ::std::string& value) {
  
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMLoginRes.result_string)
}
#if LANG_CXX11
inline void IMLoginRes::set_result_string(::std::string&& value) {
  
  result_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMLoginRes.result_string)
}
#endif
inline void IMLoginRes::set_result_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMLoginRes.result_string)
}
inline void IMLoginRes::set_result_string(const char* value, size_t size) {
  
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMLoginRes.result_string)
}
inline ::std::string* IMLoginRes::mutable_result_string() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMLoginRes.result_string)
  return result_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMLoginRes::release_result_string() {
  // @@protoc_insertion_point(field_release:IM.Login.IMLoginRes.result_string)
  
  return result_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMLoginRes::set_allocated_result_string(::std::string* result_string) {
  if (result_string != NULL) {
    
  } else {
    
  }
  result_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_string);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMLoginRes.result_string)
}

// .IM.BaseDefine.UserStatType online_status = 4;
inline void IMLoginRes::clear_online_status() {
  online_status_ = 0;
}
inline ::IM::BaseDefine::UserStatType IMLoginRes::online_status() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMLoginRes.online_status)
  return static_cast< ::IM::BaseDefine::UserStatType >(online_status_);
}
inline void IMLoginRes::set_online_status(::IM::BaseDefine::UserStatType value) {
  
  online_status_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMLoginRes.online_status)
}

// .IM.BaseDefine.UserInfo user_info = 5;
inline bool IMLoginRes::has_user_info() const {
  return this != internal_default_instance() && user_info_ != NULL;
}
inline void IMLoginRes::clear_user_info() {
  if (GetArenaNoVirtual() == NULL && user_info_ != NULL) delete user_info_;
  user_info_ = NULL;
}
inline const ::IM::BaseDefine::UserInfo& IMLoginRes::user_info() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMLoginRes.user_info)
  return user_info_ != NULL ? *user_info_
                         : *::IM::BaseDefine::UserInfo::internal_default_instance();
}
inline ::IM::BaseDefine::UserInfo* IMLoginRes::mutable_user_info() {
  
  if (user_info_ == NULL) {
    user_info_ = new ::IM::BaseDefine::UserInfo;
  }
  // @@protoc_insertion_point(field_mutable:IM.Login.IMLoginRes.user_info)
  return user_info_;
}
inline ::IM::BaseDefine::UserInfo* IMLoginRes::release_user_info() {
  // @@protoc_insertion_point(field_release:IM.Login.IMLoginRes.user_info)
  
  ::IM::BaseDefine::UserInfo* temp = user_info_;
  user_info_ = NULL;
  return temp;
}
inline void IMLoginRes::set_allocated_user_info(::IM::BaseDefine::UserInfo* user_info) {
  delete user_info_;
  user_info_ = user_info;
  if (user_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMLoginRes.user_info)
}

// -------------------------------------------------------------------

// IMLogoutReq

// -------------------------------------------------------------------

// IMLogoutRsp

// uint32 result_code = 1;
inline void IMLogoutRsp::clear_result_code() {
  result_code_ = 0u;
}
inline ::google::protobuf::uint32 IMLogoutRsp::result_code() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMLogoutRsp.result_code)
  return result_code_;
}
inline void IMLogoutRsp::set_result_code(::google::protobuf::uint32 value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMLogoutRsp.result_code)
}

// -------------------------------------------------------------------

// IMKickUser

// uint32 user_id = 1;
inline void IMKickUser::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMKickUser::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMKickUser.user_id)
  return user_id_;
}
inline void IMKickUser::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMKickUser.user_id)
}

// .IM.BaseDefine.KickReasonType kick_reason = 2;
inline void IMKickUser::clear_kick_reason() {
  kick_reason_ = 0;
}
inline ::IM::BaseDefine::KickReasonType IMKickUser::kick_reason() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMKickUser.kick_reason)
  return static_cast< ::IM::BaseDefine::KickReasonType >(kick_reason_);
}
inline void IMKickUser::set_kick_reason(::IM::BaseDefine::KickReasonType value) {
  
  kick_reason_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMKickUser.kick_reason)
}

// -------------------------------------------------------------------

// IMDeviceTokenReq

// uint32 user_id = 1;
inline void IMDeviceTokenReq::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMDeviceTokenReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMDeviceTokenReq.user_id)
  return user_id_;
}
inline void IMDeviceTokenReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMDeviceTokenReq.user_id)
}

// string device_token = 2;
inline void IMDeviceTokenReq::clear_device_token() {
  device_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMDeviceTokenReq::device_token() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMDeviceTokenReq.device_token)
  return device_token_.GetNoArena();
}
inline void IMDeviceTokenReq::set_device_token(const ::std::string& value) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMDeviceTokenReq.device_token)
}
#if LANG_CXX11
inline void IMDeviceTokenReq::set_device_token(::std::string&& value) {
  
  device_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMDeviceTokenReq.device_token)
}
#endif
inline void IMDeviceTokenReq::set_device_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMDeviceTokenReq.device_token)
}
inline void IMDeviceTokenReq::set_device_token(const char* value, size_t size) {
  
  device_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMDeviceTokenReq.device_token)
}
inline ::std::string* IMDeviceTokenReq::mutable_device_token() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMDeviceTokenReq.device_token)
  return device_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMDeviceTokenReq::release_device_token() {
  // @@protoc_insertion_point(field_release:IM.Login.IMDeviceTokenReq.device_token)
  
  return device_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMDeviceTokenReq::set_allocated_device_token(::std::string* device_token) {
  if (device_token != NULL) {
    
  } else {
    
  }
  device_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_token);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMDeviceTokenReq.device_token)
}

// .IM.BaseDefine.ClientType client_type = 3;
inline void IMDeviceTokenReq::clear_client_type() {
  client_type_ = 0;
}
inline ::IM::BaseDefine::ClientType IMDeviceTokenReq::client_type() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMDeviceTokenReq.client_type)
  return static_cast< ::IM::BaseDefine::ClientType >(client_type_);
}
inline void IMDeviceTokenReq::set_client_type(::IM::BaseDefine::ClientType value) {
  
  client_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMDeviceTokenReq.client_type)
}

// bytes attach_data = 20;
inline void IMDeviceTokenReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMDeviceTokenReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMDeviceTokenReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMDeviceTokenReq::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMDeviceTokenReq.attach_data)
}
#if LANG_CXX11
inline void IMDeviceTokenReq::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMDeviceTokenReq.attach_data)
}
#endif
inline void IMDeviceTokenReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMDeviceTokenReq.attach_data)
}
inline void IMDeviceTokenReq::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMDeviceTokenReq.attach_data)
}
inline ::std::string* IMDeviceTokenReq::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMDeviceTokenReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMDeviceTokenReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Login.IMDeviceTokenReq.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMDeviceTokenReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMDeviceTokenReq.attach_data)
}

// -------------------------------------------------------------------

// IMDeviceTokenRsp

// uint32 user_id = 1;
inline void IMDeviceTokenRsp::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMDeviceTokenRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMDeviceTokenRsp.user_id)
  return user_id_;
}
inline void IMDeviceTokenRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMDeviceTokenRsp.user_id)
}

// bytes attach_data = 20;
inline void IMDeviceTokenRsp::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMDeviceTokenRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMDeviceTokenRsp.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMDeviceTokenRsp::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMDeviceTokenRsp.attach_data)
}
#if LANG_CXX11
inline void IMDeviceTokenRsp::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMDeviceTokenRsp.attach_data)
}
#endif
inline void IMDeviceTokenRsp::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMDeviceTokenRsp.attach_data)
}
inline void IMDeviceTokenRsp::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMDeviceTokenRsp.attach_data)
}
inline ::std::string* IMDeviceTokenRsp::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMDeviceTokenRsp.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMDeviceTokenRsp::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Login.IMDeviceTokenRsp.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMDeviceTokenRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMDeviceTokenRsp.attach_data)
}

// -------------------------------------------------------------------

// IMKickPCClientReq

// uint32 user_id = 1;
inline void IMKickPCClientReq::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMKickPCClientReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMKickPCClientReq.user_id)
  return user_id_;
}
inline void IMKickPCClientReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMKickPCClientReq.user_id)
}

// -------------------------------------------------------------------

// IMKickPCClientRsp

// uint32 user_id = 1;
inline void IMKickPCClientRsp::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMKickPCClientRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMKickPCClientRsp.user_id)
  return user_id_;
}
inline void IMKickPCClientRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMKickPCClientRsp.user_id)
}

// uint32 result_code = 2;
inline void IMKickPCClientRsp::clear_result_code() {
  result_code_ = 0u;
}
inline ::google::protobuf::uint32 IMKickPCClientRsp::result_code() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMKickPCClientRsp.result_code)
  return result_code_;
}
inline void IMKickPCClientRsp::set_result_code(::google::protobuf::uint32 value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMKickPCClientRsp.result_code)
}

// -------------------------------------------------------------------

// IMPushShieldReq

// uint32 user_id = 1;
inline void IMPushShieldReq::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMPushShieldReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMPushShieldReq.user_id)
  return user_id_;
}
inline void IMPushShieldReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMPushShieldReq.user_id)
}

// uint32 shield_status = 2;
inline void IMPushShieldReq::clear_shield_status() {
  shield_status_ = 0u;
}
inline ::google::protobuf::uint32 IMPushShieldReq::shield_status() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMPushShieldReq.shield_status)
  return shield_status_;
}
inline void IMPushShieldReq::set_shield_status(::google::protobuf::uint32 value) {
  
  shield_status_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMPushShieldReq.shield_status)
}

// bytes attach_data = 20;
inline void IMPushShieldReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMPushShieldReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMPushShieldReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMPushShieldReq::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMPushShieldReq.attach_data)
}
#if LANG_CXX11
inline void IMPushShieldReq::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMPushShieldReq.attach_data)
}
#endif
inline void IMPushShieldReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMPushShieldReq.attach_data)
}
inline void IMPushShieldReq::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMPushShieldReq.attach_data)
}
inline ::std::string* IMPushShieldReq::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMPushShieldReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMPushShieldReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Login.IMPushShieldReq.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMPushShieldReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMPushShieldReq.attach_data)
}

// -------------------------------------------------------------------

// IMPushShieldRsp

// uint32 user_id = 1;
inline void IMPushShieldRsp::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMPushShieldRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMPushShieldRsp.user_id)
  return user_id_;
}
inline void IMPushShieldRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMPushShieldRsp.user_id)
}

// uint32 result_code = 2;
inline void IMPushShieldRsp::clear_result_code() {
  result_code_ = 0u;
}
inline ::google::protobuf::uint32 IMPushShieldRsp::result_code() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMPushShieldRsp.result_code)
  return result_code_;
}
inline void IMPushShieldRsp::set_result_code(::google::protobuf::uint32 value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMPushShieldRsp.result_code)
}

// uint32 shield_status = 3;
inline void IMPushShieldRsp::clear_shield_status() {
  shield_status_ = 0u;
}
inline ::google::protobuf::uint32 IMPushShieldRsp::shield_status() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMPushShieldRsp.shield_status)
  return shield_status_;
}
inline void IMPushShieldRsp::set_shield_status(::google::protobuf::uint32 value) {
  
  shield_status_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMPushShieldRsp.shield_status)
}

// bytes attach_data = 20;
inline void IMPushShieldRsp::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMPushShieldRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMPushShieldRsp.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMPushShieldRsp::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMPushShieldRsp.attach_data)
}
#if LANG_CXX11
inline void IMPushShieldRsp::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMPushShieldRsp.attach_data)
}
#endif
inline void IMPushShieldRsp::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMPushShieldRsp.attach_data)
}
inline void IMPushShieldRsp::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMPushShieldRsp.attach_data)
}
inline ::std::string* IMPushShieldRsp::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMPushShieldRsp.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMPushShieldRsp::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Login.IMPushShieldRsp.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMPushShieldRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMPushShieldRsp.attach_data)
}

// -------------------------------------------------------------------

// IMQueryPushShieldReq

// uint32 user_id = 1;
inline void IMQueryPushShieldReq::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMQueryPushShieldReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMQueryPushShieldReq.user_id)
  return user_id_;
}
inline void IMQueryPushShieldReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMQueryPushShieldReq.user_id)
}

// bytes attach_data = 20;
inline void IMQueryPushShieldReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMQueryPushShieldReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMQueryPushShieldReq.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMQueryPushShieldReq::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMQueryPushShieldReq.attach_data)
}
#if LANG_CXX11
inline void IMQueryPushShieldReq::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMQueryPushShieldReq.attach_data)
}
#endif
inline void IMQueryPushShieldReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMQueryPushShieldReq.attach_data)
}
inline void IMQueryPushShieldReq::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMQueryPushShieldReq.attach_data)
}
inline ::std::string* IMQueryPushShieldReq::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMQueryPushShieldReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMQueryPushShieldReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Login.IMQueryPushShieldReq.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMQueryPushShieldReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMQueryPushShieldReq.attach_data)
}

// -------------------------------------------------------------------

// IMQueryPushShieldRsp

// uint32 user_id = 1;
inline void IMQueryPushShieldRsp::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 IMQueryPushShieldRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMQueryPushShieldRsp.user_id)
  return user_id_;
}
inline void IMQueryPushShieldRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMQueryPushShieldRsp.user_id)
}

// uint32 result_code = 2;
inline void IMQueryPushShieldRsp::clear_result_code() {
  result_code_ = 0u;
}
inline ::google::protobuf::uint32 IMQueryPushShieldRsp::result_code() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMQueryPushShieldRsp.result_code)
  return result_code_;
}
inline void IMQueryPushShieldRsp::set_result_code(::google::protobuf::uint32 value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMQueryPushShieldRsp.result_code)
}

// uint32 shield_status = 3;
inline void IMQueryPushShieldRsp::clear_shield_status() {
  shield_status_ = 0u;
}
inline ::google::protobuf::uint32 IMQueryPushShieldRsp::shield_status() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMQueryPushShieldRsp.shield_status)
  return shield_status_;
}
inline void IMQueryPushShieldRsp::set_shield_status(::google::protobuf::uint32 value) {
  
  shield_status_ = value;
  // @@protoc_insertion_point(field_set:IM.Login.IMQueryPushShieldRsp.shield_status)
}

// bytes attach_data = 20;
inline void IMQueryPushShieldRsp::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IMQueryPushShieldRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Login.IMQueryPushShieldRsp.attach_data)
  return attach_data_.GetNoArena();
}
inline void IMQueryPushShieldRsp::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Login.IMQueryPushShieldRsp.attach_data)
}
#if LANG_CXX11
inline void IMQueryPushShieldRsp::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Login.IMQueryPushShieldRsp.attach_data)
}
#endif
inline void IMQueryPushShieldRsp::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Login.IMQueryPushShieldRsp.attach_data)
}
inline void IMQueryPushShieldRsp::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Login.IMQueryPushShieldRsp.attach_data)
}
inline ::std::string* IMQueryPushShieldRsp::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Login.IMQueryPushShieldRsp.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IMQueryPushShieldRsp::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Login.IMQueryPushShieldRsp.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IMQueryPushShieldRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Login.IMQueryPushShieldRsp.attach_data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace Login
}  // namespace IM

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_IM_2eLogin_2eproto__INCLUDED
