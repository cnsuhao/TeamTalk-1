// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.Group.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "IM.Group.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace IM {
namespace Group {
class IMNormalGroupListReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IMNormalGroupListReq> {
} _IMNormalGroupListReq_default_instance_;
class IMNormalGroupListRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IMNormalGroupListRsp> {
} _IMNormalGroupListRsp_default_instance_;
class IMGroupInfoListReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IMGroupInfoListReq> {
} _IMGroupInfoListReq_default_instance_;
class IMGroupInfoListRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IMGroupInfoListRsp> {
} _IMGroupInfoListRsp_default_instance_;
class IMGroupCreateReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IMGroupCreateReq> {
} _IMGroupCreateReq_default_instance_;
class IMGroupCreateRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IMGroupCreateRsp> {
} _IMGroupCreateRsp_default_instance_;
class IMGroupChangeMemberReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IMGroupChangeMemberReq> {
} _IMGroupChangeMemberReq_default_instance_;
class IMGroupChangeMemberRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IMGroupChangeMemberRsp> {
} _IMGroupChangeMemberRsp_default_instance_;
class IMGroupShieldReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IMGroupShieldReq> {
} _IMGroupShieldReq_default_instance_;
class IMGroupShieldRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IMGroupShieldRsp> {
} _IMGroupShieldRsp_default_instance_;
class IMGroupChangeMemberNotifyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IMGroupChangeMemberNotify> {
} _IMGroupChangeMemberNotify_default_instance_;

namespace protobuf_IM_2eGroup_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};


void TableStruct::Shutdown() {
  _IMNormalGroupListReq_default_instance_.Shutdown();
  _IMNormalGroupListRsp_default_instance_.Shutdown();
  _IMGroupInfoListReq_default_instance_.Shutdown();
  _IMGroupInfoListRsp_default_instance_.Shutdown();
  _IMGroupCreateReq_default_instance_.Shutdown();
  _IMGroupCreateRsp_default_instance_.Shutdown();
  _IMGroupChangeMemberReq_default_instance_.Shutdown();
  _IMGroupChangeMemberRsp_default_instance_.Shutdown();
  _IMGroupShieldReq_default_instance_.Shutdown();
  _IMGroupShieldRsp_default_instance_.Shutdown();
  _IMGroupChangeMemberNotify_default_instance_.Shutdown();
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::IM::BaseDefine::protobuf_IM_2eBaseDefine_2eproto::InitDefaults();
  _IMNormalGroupListReq_default_instance_.DefaultConstruct();
  _IMNormalGroupListRsp_default_instance_.DefaultConstruct();
  _IMGroupInfoListReq_default_instance_.DefaultConstruct();
  _IMGroupInfoListRsp_default_instance_.DefaultConstruct();
  _IMGroupCreateReq_default_instance_.DefaultConstruct();
  _IMGroupCreateRsp_default_instance_.DefaultConstruct();
  _IMGroupChangeMemberReq_default_instance_.DefaultConstruct();
  _IMGroupChangeMemberRsp_default_instance_.DefaultConstruct();
  _IMGroupShieldReq_default_instance_.DefaultConstruct();
  _IMGroupShieldRsp_default_instance_.DefaultConstruct();
  _IMGroupChangeMemberNotify_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  ::IM::BaseDefine::protobuf_IM_2eBaseDefine_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
#endif  // GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER

}  // namespace protobuf_IM_2eGroup_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMNormalGroupListReq::kUserIdFieldNumber;
const int IMNormalGroupListReq::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMNormalGroupListReq::IMNormalGroupListReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_IM_2eGroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMNormalGroupListReq)
}
IMNormalGroupListReq::IMNormalGroupListReq(const IMNormalGroupListReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMNormalGroupListReq)
}

void IMNormalGroupListReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

IMNormalGroupListReq::~IMNormalGroupListReq() {
  // @@protoc_insertion_point(destructor:IM.Group.IMNormalGroupListReq)
  SharedDtor();
}

void IMNormalGroupListReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMNormalGroupListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IMNormalGroupListReq& IMNormalGroupListReq::default_instance() {
  protobuf_IM_2eGroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

IMNormalGroupListReq* IMNormalGroupListReq::New(::google::protobuf::Arena* arena) const {
  IMNormalGroupListReq* n = new IMNormalGroupListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMNormalGroupListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMNormalGroupListReq)
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
}

bool IMNormalGroupListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMNormalGroupListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMNormalGroupListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMNormalGroupListReq)
  return false;
#undef DO_
}

void IMNormalGroupListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMNormalGroupListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Group.IMNormalGroupListReq)
}

size_t IMNormalGroupListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMNormalGroupListReq)
  size_t total_size = 0;

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMNormalGroupListReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMNormalGroupListReq*>(&from));
}

void IMNormalGroupListReq::MergeFrom(const IMNormalGroupListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMNormalGroupListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void IMNormalGroupListReq::CopyFrom(const IMNormalGroupListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMNormalGroupListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMNormalGroupListReq::IsInitialized() const {
  return true;
}

void IMNormalGroupListReq::Swap(IMNormalGroupListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMNormalGroupListReq::InternalSwap(IMNormalGroupListReq* other) {
  attach_data_.Swap(&other->attach_data_);
  std::swap(user_id_, other->user_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IMNormalGroupListReq::GetTypeName() const {
  return "IM.Group.IMNormalGroupListReq";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMNormalGroupListReq

// uint32 user_id = 1;
void IMNormalGroupListReq::clear_user_id() {
  user_id_ = 0u;
}
::google::protobuf::uint32 IMNormalGroupListReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMNormalGroupListReq.user_id)
  return user_id_;
}
void IMNormalGroupListReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMNormalGroupListReq.user_id)
}

// bytes attach_data = 20;
void IMNormalGroupListReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMNormalGroupListReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMNormalGroupListReq.attach_data)
  return attach_data_.GetNoArena();
}
void IMNormalGroupListReq::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMNormalGroupListReq.attach_data)
}
#if LANG_CXX11
void IMNormalGroupListReq::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMNormalGroupListReq.attach_data)
}
#endif
void IMNormalGroupListReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMNormalGroupListReq.attach_data)
}
void IMNormalGroupListReq::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMNormalGroupListReq.attach_data)
}
::std::string* IMNormalGroupListReq::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMNormalGroupListReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMNormalGroupListReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Group.IMNormalGroupListReq.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMNormalGroupListReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMNormalGroupListReq.attach_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMNormalGroupListRsp::kUserIdFieldNumber;
const int IMNormalGroupListRsp::kGroupVersionListFieldNumber;
const int IMNormalGroupListRsp::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMNormalGroupListRsp::IMNormalGroupListRsp()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_IM_2eGroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMNormalGroupListRsp)
}
IMNormalGroupListRsp::IMNormalGroupListRsp(const IMNormalGroupListRsp& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      group_version_list_(from.group_version_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMNormalGroupListRsp)
}

void IMNormalGroupListRsp::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

IMNormalGroupListRsp::~IMNormalGroupListRsp() {
  // @@protoc_insertion_point(destructor:IM.Group.IMNormalGroupListRsp)
  SharedDtor();
}

void IMNormalGroupListRsp::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMNormalGroupListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IMNormalGroupListRsp& IMNormalGroupListRsp::default_instance() {
  protobuf_IM_2eGroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

IMNormalGroupListRsp* IMNormalGroupListRsp::New(::google::protobuf::Arena* arena) const {
  IMNormalGroupListRsp* n = new IMNormalGroupListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMNormalGroupListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMNormalGroupListRsp)
  group_version_list_.Clear();
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
}

bool IMNormalGroupListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMNormalGroupListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_group_version_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMNormalGroupListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMNormalGroupListRsp)
  return false;
#undef DO_
}

void IMNormalGroupListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMNormalGroupListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
  for (unsigned int i = 0, n = this->group_version_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->group_version_list(i), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Group.IMNormalGroupListRsp)
}

size_t IMNormalGroupListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMNormalGroupListRsp)
  size_t total_size = 0;

  // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
  {
    unsigned int count = this->group_version_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->group_version_list(i));
    }
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMNormalGroupListRsp::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMNormalGroupListRsp*>(&from));
}

void IMNormalGroupListRsp::MergeFrom(const IMNormalGroupListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMNormalGroupListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_version_list_.MergeFrom(from.group_version_list_);
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void IMNormalGroupListRsp::CopyFrom(const IMNormalGroupListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMNormalGroupListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMNormalGroupListRsp::IsInitialized() const {
  return true;
}

void IMNormalGroupListRsp::Swap(IMNormalGroupListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMNormalGroupListRsp::InternalSwap(IMNormalGroupListRsp* other) {
  group_version_list_.InternalSwap(&other->group_version_list_);
  attach_data_.Swap(&other->attach_data_);
  std::swap(user_id_, other->user_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IMNormalGroupListRsp::GetTypeName() const {
  return "IM.Group.IMNormalGroupListRsp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMNormalGroupListRsp

// uint32 user_id = 1;
void IMNormalGroupListRsp::clear_user_id() {
  user_id_ = 0u;
}
::google::protobuf::uint32 IMNormalGroupListRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMNormalGroupListRsp.user_id)
  return user_id_;
}
void IMNormalGroupListRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMNormalGroupListRsp.user_id)
}

// repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
int IMNormalGroupListRsp::group_version_list_size() const {
  return group_version_list_.size();
}
void IMNormalGroupListRsp::clear_group_version_list() {
  group_version_list_.Clear();
}
const ::IM::BaseDefine::GroupVersionInfo& IMNormalGroupListRsp::group_version_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Group.IMNormalGroupListRsp.group_version_list)
  return group_version_list_.Get(index);
}
::IM::BaseDefine::GroupVersionInfo* IMNormalGroupListRsp::mutable_group_version_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Group.IMNormalGroupListRsp.group_version_list)
  return group_version_list_.Mutable(index);
}
::IM::BaseDefine::GroupVersionInfo* IMNormalGroupListRsp::add_group_version_list() {
  // @@protoc_insertion_point(field_add:IM.Group.IMNormalGroupListRsp.group_version_list)
  return group_version_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::GroupVersionInfo >*
IMNormalGroupListRsp::mutable_group_version_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Group.IMNormalGroupListRsp.group_version_list)
  return &group_version_list_;
}
const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::GroupVersionInfo >&
IMNormalGroupListRsp::group_version_list() const {
  // @@protoc_insertion_point(field_list:IM.Group.IMNormalGroupListRsp.group_version_list)
  return group_version_list_;
}

// bytes attach_data = 20;
void IMNormalGroupListRsp::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMNormalGroupListRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMNormalGroupListRsp.attach_data)
  return attach_data_.GetNoArena();
}
void IMNormalGroupListRsp::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMNormalGroupListRsp.attach_data)
}
#if LANG_CXX11
void IMNormalGroupListRsp::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMNormalGroupListRsp.attach_data)
}
#endif
void IMNormalGroupListRsp::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMNormalGroupListRsp.attach_data)
}
void IMNormalGroupListRsp::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMNormalGroupListRsp.attach_data)
}
::std::string* IMNormalGroupListRsp::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMNormalGroupListRsp.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMNormalGroupListRsp::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Group.IMNormalGroupListRsp.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMNormalGroupListRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMNormalGroupListRsp.attach_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupInfoListReq::kUserIdFieldNumber;
const int IMGroupInfoListReq::kGroupVersionListFieldNumber;
const int IMGroupInfoListReq::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupInfoListReq::IMGroupInfoListReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_IM_2eGroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupInfoListReq)
}
IMGroupInfoListReq::IMGroupInfoListReq(const IMGroupInfoListReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      group_version_list_(from.group_version_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupInfoListReq)
}

void IMGroupInfoListReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

IMGroupInfoListReq::~IMGroupInfoListReq() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupInfoListReq)
  SharedDtor();
}

void IMGroupInfoListReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupInfoListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IMGroupInfoListReq& IMGroupInfoListReq::default_instance() {
  protobuf_IM_2eGroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

IMGroupInfoListReq* IMGroupInfoListReq::New(::google::protobuf::Arena* arena) const {
  IMGroupInfoListReq* n = new IMGroupInfoListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupInfoListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupInfoListReq)
  group_version_list_.Clear();
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
}

bool IMGroupInfoListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupInfoListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_group_version_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupInfoListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupInfoListReq)
  return false;
#undef DO_
}

void IMGroupInfoListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupInfoListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
  for (unsigned int i = 0, n = this->group_version_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->group_version_list(i), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupInfoListReq)
}

size_t IMGroupInfoListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupInfoListReq)
  size_t total_size = 0;

  // repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
  {
    unsigned int count = this->group_version_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->group_version_list(i));
    }
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupInfoListReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMGroupInfoListReq*>(&from));
}

void IMGroupInfoListReq::MergeFrom(const IMGroupInfoListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupInfoListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_version_list_.MergeFrom(from.group_version_list_);
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void IMGroupInfoListReq::CopyFrom(const IMGroupInfoListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupInfoListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupInfoListReq::IsInitialized() const {
  return true;
}

void IMGroupInfoListReq::Swap(IMGroupInfoListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupInfoListReq::InternalSwap(IMGroupInfoListReq* other) {
  group_version_list_.InternalSwap(&other->group_version_list_);
  attach_data_.Swap(&other->attach_data_);
  std::swap(user_id_, other->user_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IMGroupInfoListReq::GetTypeName() const {
  return "IM.Group.IMGroupInfoListReq";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMGroupInfoListReq

// uint32 user_id = 1;
void IMGroupInfoListReq::clear_user_id() {
  user_id_ = 0u;
}
::google::protobuf::uint32 IMGroupInfoListReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupInfoListReq.user_id)
  return user_id_;
}
void IMGroupInfoListReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupInfoListReq.user_id)
}

// repeated .IM.BaseDefine.GroupVersionInfo group_version_list = 2;
int IMGroupInfoListReq::group_version_list_size() const {
  return group_version_list_.size();
}
void IMGroupInfoListReq::clear_group_version_list() {
  group_version_list_.Clear();
}
const ::IM::BaseDefine::GroupVersionInfo& IMGroupInfoListReq::group_version_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupInfoListReq.group_version_list)
  return group_version_list_.Get(index);
}
::IM::BaseDefine::GroupVersionInfo* IMGroupInfoListReq::mutable_group_version_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupInfoListReq.group_version_list)
  return group_version_list_.Mutable(index);
}
::IM::BaseDefine::GroupVersionInfo* IMGroupInfoListReq::add_group_version_list() {
  // @@protoc_insertion_point(field_add:IM.Group.IMGroupInfoListReq.group_version_list)
  return group_version_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::GroupVersionInfo >*
IMGroupInfoListReq::mutable_group_version_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Group.IMGroupInfoListReq.group_version_list)
  return &group_version_list_;
}
const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::GroupVersionInfo >&
IMGroupInfoListReq::group_version_list() const {
  // @@protoc_insertion_point(field_list:IM.Group.IMGroupInfoListReq.group_version_list)
  return group_version_list_;
}

// bytes attach_data = 20;
void IMGroupInfoListReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMGroupInfoListReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupInfoListReq.attach_data)
  return attach_data_.GetNoArena();
}
void IMGroupInfoListReq::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupInfoListReq.attach_data)
}
#if LANG_CXX11
void IMGroupInfoListReq::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMGroupInfoListReq.attach_data)
}
#endif
void IMGroupInfoListReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMGroupInfoListReq.attach_data)
}
void IMGroupInfoListReq::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMGroupInfoListReq.attach_data)
}
::std::string* IMGroupInfoListReq::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupInfoListReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMGroupInfoListReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Group.IMGroupInfoListReq.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMGroupInfoListReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMGroupInfoListReq.attach_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupInfoListRsp::kUserIdFieldNumber;
const int IMGroupInfoListRsp::kGroupInfoListFieldNumber;
const int IMGroupInfoListRsp::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupInfoListRsp::IMGroupInfoListRsp()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_IM_2eGroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupInfoListRsp)
}
IMGroupInfoListRsp::IMGroupInfoListRsp(const IMGroupInfoListRsp& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      group_info_list_(from.group_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupInfoListRsp)
}

void IMGroupInfoListRsp::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
  _cached_size_ = 0;
}

IMGroupInfoListRsp::~IMGroupInfoListRsp() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupInfoListRsp)
  SharedDtor();
}

void IMGroupInfoListRsp::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupInfoListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IMGroupInfoListRsp& IMGroupInfoListRsp::default_instance() {
  protobuf_IM_2eGroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

IMGroupInfoListRsp* IMGroupInfoListRsp::New(::google::protobuf::Arena* arena) const {
  IMGroupInfoListRsp* n = new IMGroupInfoListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupInfoListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupInfoListRsp)
  group_info_list_.Clear();
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = 0u;
}

bool IMGroupInfoListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupInfoListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .IM.BaseDefine.GroupInfo group_info_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_group_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupInfoListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupInfoListRsp)
  return false;
#undef DO_
}

void IMGroupInfoListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupInfoListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // repeated .IM.BaseDefine.GroupInfo group_info_list = 2;
  for (unsigned int i = 0, n = this->group_info_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->group_info_list(i), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupInfoListRsp)
}

size_t IMGroupInfoListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupInfoListRsp)
  size_t total_size = 0;

  // repeated .IM.BaseDefine.GroupInfo group_info_list = 2;
  {
    unsigned int count = this->group_info_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->group_info_list(i));
    }
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupInfoListRsp::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMGroupInfoListRsp*>(&from));
}

void IMGroupInfoListRsp::MergeFrom(const IMGroupInfoListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupInfoListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_info_list_.MergeFrom(from.group_info_list_);
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void IMGroupInfoListRsp::CopyFrom(const IMGroupInfoListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupInfoListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupInfoListRsp::IsInitialized() const {
  return true;
}

void IMGroupInfoListRsp::Swap(IMGroupInfoListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupInfoListRsp::InternalSwap(IMGroupInfoListRsp* other) {
  group_info_list_.InternalSwap(&other->group_info_list_);
  attach_data_.Swap(&other->attach_data_);
  std::swap(user_id_, other->user_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IMGroupInfoListRsp::GetTypeName() const {
  return "IM.Group.IMGroupInfoListRsp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMGroupInfoListRsp

// uint32 user_id = 1;
void IMGroupInfoListRsp::clear_user_id() {
  user_id_ = 0u;
}
::google::protobuf::uint32 IMGroupInfoListRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupInfoListRsp.user_id)
  return user_id_;
}
void IMGroupInfoListRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupInfoListRsp.user_id)
}

// repeated .IM.BaseDefine.GroupInfo group_info_list = 2;
int IMGroupInfoListRsp::group_info_list_size() const {
  return group_info_list_.size();
}
void IMGroupInfoListRsp::clear_group_info_list() {
  group_info_list_.Clear();
}
const ::IM::BaseDefine::GroupInfo& IMGroupInfoListRsp::group_info_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupInfoListRsp.group_info_list)
  return group_info_list_.Get(index);
}
::IM::BaseDefine::GroupInfo* IMGroupInfoListRsp::mutable_group_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupInfoListRsp.group_info_list)
  return group_info_list_.Mutable(index);
}
::IM::BaseDefine::GroupInfo* IMGroupInfoListRsp::add_group_info_list() {
  // @@protoc_insertion_point(field_add:IM.Group.IMGroupInfoListRsp.group_info_list)
  return group_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::GroupInfo >*
IMGroupInfoListRsp::mutable_group_info_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Group.IMGroupInfoListRsp.group_info_list)
  return &group_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::IM::BaseDefine::GroupInfo >&
IMGroupInfoListRsp::group_info_list() const {
  // @@protoc_insertion_point(field_list:IM.Group.IMGroupInfoListRsp.group_info_list)
  return group_info_list_;
}

// bytes attach_data = 20;
void IMGroupInfoListRsp::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMGroupInfoListRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupInfoListRsp.attach_data)
  return attach_data_.GetNoArena();
}
void IMGroupInfoListRsp::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupInfoListRsp.attach_data)
}
#if LANG_CXX11
void IMGroupInfoListRsp::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMGroupInfoListRsp.attach_data)
}
#endif
void IMGroupInfoListRsp::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMGroupInfoListRsp.attach_data)
}
void IMGroupInfoListRsp::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMGroupInfoListRsp.attach_data)
}
::std::string* IMGroupInfoListRsp::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupInfoListRsp.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMGroupInfoListRsp::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Group.IMGroupInfoListRsp.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMGroupInfoListRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMGroupInfoListRsp.attach_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupCreateReq::kUserIdFieldNumber;
const int IMGroupCreateReq::kGroupTypeFieldNumber;
const int IMGroupCreateReq::kGroupNameFieldNumber;
const int IMGroupCreateReq::kGroupAvatarFieldNumber;
const int IMGroupCreateReq::kMemberIdListFieldNumber;
const int IMGroupCreateReq::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupCreateReq::IMGroupCreateReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_IM_2eGroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupCreateReq)
}
IMGroupCreateReq::IMGroupCreateReq(const IMGroupCreateReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      member_id_list_(from.member_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  group_avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_avatar().size() > 0) {
    group_avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_avatar_);
  }
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    reinterpret_cast<char*>(&group_type_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_type_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupCreateReq)
}

void IMGroupCreateReq::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_avatar_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&group_type_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_type_));
  _cached_size_ = 0;
}

IMGroupCreateReq::~IMGroupCreateReq() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupCreateReq)
  SharedDtor();
}

void IMGroupCreateReq::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_avatar_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupCreateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IMGroupCreateReq& IMGroupCreateReq::default_instance() {
  protobuf_IM_2eGroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

IMGroupCreateReq* IMGroupCreateReq::New(::google::protobuf::Arena* arena) const {
  IMGroupCreateReq* n = new IMGroupCreateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupCreateReq)
  member_id_list_.Clear();
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&group_type_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_type_));
}

bool IMGroupCreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupCreateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.GroupType group_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_group_type(static_cast< ::IM::BaseDefine::GroupType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), this->group_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.Group.IMGroupCreateReq.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_avatar = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_avatar()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_avatar().data(), this->group_avatar().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.Group.IMGroupCreateReq.group_avatar"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 member_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_member_id_list())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(40u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_member_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupCreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupCreateReq)
  return false;
#undef DO_
}

void IMGroupCreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .IM.BaseDefine.GroupType group_type = 2;
  if (this->group_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->group_type(), output);
  }

  // string group_name = 3;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), this->group_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Group.IMGroupCreateReq.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->group_name(), output);
  }

  // string group_avatar = 4;
  if (this->group_avatar().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_avatar().data(), this->group_avatar().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Group.IMGroupCreateReq.group_avatar");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->group_avatar(), output);
  }

  // repeated uint32 member_id_list = 5;
  if (this->member_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_member_id_list_cached_byte_size_);
  }
  for (int i = 0, n = this->member_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->member_id_list(i), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupCreateReq)
}

size_t IMGroupCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupCreateReq)
  size_t total_size = 0;

  // repeated uint32 member_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->member_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _member_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string group_name = 3;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  // string group_avatar = 4;
  if (this->group_avatar().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_avatar());
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .IM.BaseDefine.GroupType group_type = 2;
  if (this->group_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->group_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupCreateReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMGroupCreateReq*>(&from));
}

void IMGroupCreateReq::MergeFrom(const IMGroupCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_id_list_.MergeFrom(from.member_id_list_);
  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  if (from.group_avatar().size() > 0) {

    group_avatar_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_avatar_);
  }
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_type() != 0) {
    set_group_type(from.group_type());
  }
}

void IMGroupCreateReq::CopyFrom(const IMGroupCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupCreateReq::IsInitialized() const {
  return true;
}

void IMGroupCreateReq::Swap(IMGroupCreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupCreateReq::InternalSwap(IMGroupCreateReq* other) {
  member_id_list_.InternalSwap(&other->member_id_list_);
  group_name_.Swap(&other->group_name_);
  group_avatar_.Swap(&other->group_avatar_);
  attach_data_.Swap(&other->attach_data_);
  std::swap(user_id_, other->user_id_);
  std::swap(group_type_, other->group_type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IMGroupCreateReq::GetTypeName() const {
  return "IM.Group.IMGroupCreateReq";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMGroupCreateReq

// uint32 user_id = 1;
void IMGroupCreateReq::clear_user_id() {
  user_id_ = 0u;
}
::google::protobuf::uint32 IMGroupCreateReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupCreateReq.user_id)
  return user_id_;
}
void IMGroupCreateReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupCreateReq.user_id)
}

// .IM.BaseDefine.GroupType group_type = 2;
void IMGroupCreateReq::clear_group_type() {
  group_type_ = 0;
}
::IM::BaseDefine::GroupType IMGroupCreateReq::group_type() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupCreateReq.group_type)
  return static_cast< ::IM::BaseDefine::GroupType >(group_type_);
}
void IMGroupCreateReq::set_group_type(::IM::BaseDefine::GroupType value) {
  
  group_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupCreateReq.group_type)
}

// string group_name = 3;
void IMGroupCreateReq::clear_group_name() {
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMGroupCreateReq::group_name() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupCreateReq.group_name)
  return group_name_.GetNoArena();
}
void IMGroupCreateReq::set_group_name(const ::std::string& value) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupCreateReq.group_name)
}
#if LANG_CXX11
void IMGroupCreateReq::set_group_name(::std::string&& value) {
  
  group_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMGroupCreateReq.group_name)
}
#endif
void IMGroupCreateReq::set_group_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMGroupCreateReq.group_name)
}
void IMGroupCreateReq::set_group_name(const char* value, size_t size) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMGroupCreateReq.group_name)
}
::std::string* IMGroupCreateReq::mutable_group_name() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupCreateReq.group_name)
  return group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMGroupCreateReq::release_group_name() {
  // @@protoc_insertion_point(field_release:IM.Group.IMGroupCreateReq.group_name)
  
  return group_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMGroupCreateReq::set_allocated_group_name(::std::string* group_name) {
  if (group_name != NULL) {
    
  } else {
    
  }
  group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_name);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMGroupCreateReq.group_name)
}

// string group_avatar = 4;
void IMGroupCreateReq::clear_group_avatar() {
  group_avatar_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMGroupCreateReq::group_avatar() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupCreateReq.group_avatar)
  return group_avatar_.GetNoArena();
}
void IMGroupCreateReq::set_group_avatar(const ::std::string& value) {
  
  group_avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupCreateReq.group_avatar)
}
#if LANG_CXX11
void IMGroupCreateReq::set_group_avatar(::std::string&& value) {
  
  group_avatar_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMGroupCreateReq.group_avatar)
}
#endif
void IMGroupCreateReq::set_group_avatar(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMGroupCreateReq.group_avatar)
}
void IMGroupCreateReq::set_group_avatar(const char* value, size_t size) {
  
  group_avatar_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMGroupCreateReq.group_avatar)
}
::std::string* IMGroupCreateReq::mutable_group_avatar() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupCreateReq.group_avatar)
  return group_avatar_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMGroupCreateReq::release_group_avatar() {
  // @@protoc_insertion_point(field_release:IM.Group.IMGroupCreateReq.group_avatar)
  
  return group_avatar_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMGroupCreateReq::set_allocated_group_avatar(::std::string* group_avatar) {
  if (group_avatar != NULL) {
    
  } else {
    
  }
  group_avatar_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_avatar);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMGroupCreateReq.group_avatar)
}

// repeated uint32 member_id_list = 5;
int IMGroupCreateReq::member_id_list_size() const {
  return member_id_list_.size();
}
void IMGroupCreateReq::clear_member_id_list() {
  member_id_list_.Clear();
}
::google::protobuf::uint32 IMGroupCreateReq::member_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupCreateReq.member_id_list)
  return member_id_list_.Get(index);
}
void IMGroupCreateReq::set_member_id_list(int index, ::google::protobuf::uint32 value) {
  member_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupCreateReq.member_id_list)
}
void IMGroupCreateReq::add_member_id_list(::google::protobuf::uint32 value) {
  member_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:IM.Group.IMGroupCreateReq.member_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
IMGroupCreateReq::member_id_list() const {
  // @@protoc_insertion_point(field_list:IM.Group.IMGroupCreateReq.member_id_list)
  return member_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
IMGroupCreateReq::mutable_member_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Group.IMGroupCreateReq.member_id_list)
  return &member_id_list_;
}

// bytes attach_data = 20;
void IMGroupCreateReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMGroupCreateReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupCreateReq.attach_data)
  return attach_data_.GetNoArena();
}
void IMGroupCreateReq::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupCreateReq.attach_data)
}
#if LANG_CXX11
void IMGroupCreateReq::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMGroupCreateReq.attach_data)
}
#endif
void IMGroupCreateReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMGroupCreateReq.attach_data)
}
void IMGroupCreateReq::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMGroupCreateReq.attach_data)
}
::std::string* IMGroupCreateReq::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupCreateReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMGroupCreateReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Group.IMGroupCreateReq.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMGroupCreateReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMGroupCreateReq.attach_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupCreateRsp::kUserIdFieldNumber;
const int IMGroupCreateRsp::kResultCodeFieldNumber;
const int IMGroupCreateRsp::kGroupIdFieldNumber;
const int IMGroupCreateRsp::kGroupNameFieldNumber;
const int IMGroupCreateRsp::kUserIdListFieldNumber;
const int IMGroupCreateRsp::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupCreateRsp::IMGroupCreateRsp()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_IM_2eGroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupCreateRsp)
}
IMGroupCreateRsp::IMGroupCreateRsp(const IMGroupCreateRsp& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      user_id_list_(from.user_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.group_name().size() > 0) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupCreateRsp)
}

void IMGroupCreateRsp::SharedCtor() {
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_id_));
  _cached_size_ = 0;
}

IMGroupCreateRsp::~IMGroupCreateRsp() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupCreateRsp)
  SharedDtor();
}

void IMGroupCreateRsp::SharedDtor() {
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupCreateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IMGroupCreateRsp& IMGroupCreateRsp::default_instance() {
  protobuf_IM_2eGroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

IMGroupCreateRsp* IMGroupCreateRsp::New(::google::protobuf::Arena* arena) const {
  IMGroupCreateRsp* n = new IMGroupCreateRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupCreateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupCreateRsp)
  user_id_list_.Clear();
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_id_));
}

bool IMGroupCreateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupCreateRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string group_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->group_name().data(), this->group_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IM.Group.IMGroupCreateRsp.group_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 user_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_user_id_list())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(40u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_user_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupCreateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupCreateRsp)
  return false;
#undef DO_
}

void IMGroupCreateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result_code(), output);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_id(), output);
  }

  // string group_name = 4;
  if (this->group_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->group_name().data(), this->group_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IM.Group.IMGroupCreateRsp.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->group_name(), output);
  }

  // repeated uint32 user_id_list = 5;
  if (this->user_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_user_id_list_cached_byte_size_);
  }
  for (int i = 0, n = this->user_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->user_id_list(i), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupCreateRsp)
}

size_t IMGroupCreateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupCreateRsp)
  size_t total_size = 0;

  // repeated uint32 user_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->user_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _user_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string group_name = 4;
  if (this->group_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->group_name());
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 result_code = 2;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_code());
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupCreateRsp::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMGroupCreateRsp*>(&from));
}

void IMGroupCreateRsp::MergeFrom(const IMGroupCreateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_id_list_.MergeFrom(from.user_id_list_);
  if (from.group_name().size() > 0) {

    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void IMGroupCreateRsp::CopyFrom(const IMGroupCreateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupCreateRsp::IsInitialized() const {
  return true;
}

void IMGroupCreateRsp::Swap(IMGroupCreateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupCreateRsp::InternalSwap(IMGroupCreateRsp* other) {
  user_id_list_.InternalSwap(&other->user_id_list_);
  group_name_.Swap(&other->group_name_);
  attach_data_.Swap(&other->attach_data_);
  std::swap(user_id_, other->user_id_);
  std::swap(result_code_, other->result_code_);
  std::swap(group_id_, other->group_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IMGroupCreateRsp::GetTypeName() const {
  return "IM.Group.IMGroupCreateRsp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMGroupCreateRsp

// uint32 user_id = 1;
void IMGroupCreateRsp::clear_user_id() {
  user_id_ = 0u;
}
::google::protobuf::uint32 IMGroupCreateRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupCreateRsp.user_id)
  return user_id_;
}
void IMGroupCreateRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupCreateRsp.user_id)
}

// uint32 result_code = 2;
void IMGroupCreateRsp::clear_result_code() {
  result_code_ = 0u;
}
::google::protobuf::uint32 IMGroupCreateRsp::result_code() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupCreateRsp.result_code)
  return result_code_;
}
void IMGroupCreateRsp::set_result_code(::google::protobuf::uint32 value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupCreateRsp.result_code)
}

// uint32 group_id = 3;
void IMGroupCreateRsp::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 IMGroupCreateRsp::group_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupCreateRsp.group_id)
  return group_id_;
}
void IMGroupCreateRsp::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupCreateRsp.group_id)
}

// string group_name = 4;
void IMGroupCreateRsp::clear_group_name() {
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMGroupCreateRsp::group_name() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupCreateRsp.group_name)
  return group_name_.GetNoArena();
}
void IMGroupCreateRsp::set_group_name(const ::std::string& value) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupCreateRsp.group_name)
}
#if LANG_CXX11
void IMGroupCreateRsp::set_group_name(::std::string&& value) {
  
  group_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMGroupCreateRsp.group_name)
}
#endif
void IMGroupCreateRsp::set_group_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMGroupCreateRsp.group_name)
}
void IMGroupCreateRsp::set_group_name(const char* value, size_t size) {
  
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMGroupCreateRsp.group_name)
}
::std::string* IMGroupCreateRsp::mutable_group_name() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupCreateRsp.group_name)
  return group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMGroupCreateRsp::release_group_name() {
  // @@protoc_insertion_point(field_release:IM.Group.IMGroupCreateRsp.group_name)
  
  return group_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMGroupCreateRsp::set_allocated_group_name(::std::string* group_name) {
  if (group_name != NULL) {
    
  } else {
    
  }
  group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_name);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMGroupCreateRsp.group_name)
}

// repeated uint32 user_id_list = 5;
int IMGroupCreateRsp::user_id_list_size() const {
  return user_id_list_.size();
}
void IMGroupCreateRsp::clear_user_id_list() {
  user_id_list_.Clear();
}
::google::protobuf::uint32 IMGroupCreateRsp::user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupCreateRsp.user_id_list)
  return user_id_list_.Get(index);
}
void IMGroupCreateRsp::set_user_id_list(int index, ::google::protobuf::uint32 value) {
  user_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupCreateRsp.user_id_list)
}
void IMGroupCreateRsp::add_user_id_list(::google::protobuf::uint32 value) {
  user_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:IM.Group.IMGroupCreateRsp.user_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
IMGroupCreateRsp::user_id_list() const {
  // @@protoc_insertion_point(field_list:IM.Group.IMGroupCreateRsp.user_id_list)
  return user_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
IMGroupCreateRsp::mutable_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Group.IMGroupCreateRsp.user_id_list)
  return &user_id_list_;
}

// bytes attach_data = 20;
void IMGroupCreateRsp::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMGroupCreateRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupCreateRsp.attach_data)
  return attach_data_.GetNoArena();
}
void IMGroupCreateRsp::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupCreateRsp.attach_data)
}
#if LANG_CXX11
void IMGroupCreateRsp::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMGroupCreateRsp.attach_data)
}
#endif
void IMGroupCreateRsp::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMGroupCreateRsp.attach_data)
}
void IMGroupCreateRsp::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMGroupCreateRsp.attach_data)
}
::std::string* IMGroupCreateRsp::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupCreateRsp.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMGroupCreateRsp::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Group.IMGroupCreateRsp.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMGroupCreateRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMGroupCreateRsp.attach_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupChangeMemberReq::kUserIdFieldNumber;
const int IMGroupChangeMemberReq::kChangeTypeFieldNumber;
const int IMGroupChangeMemberReq::kGroupIdFieldNumber;
const int IMGroupChangeMemberReq::kMemberIdListFieldNumber;
const int IMGroupChangeMemberReq::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupChangeMemberReq::IMGroupChangeMemberReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_IM_2eGroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupChangeMemberReq)
}
IMGroupChangeMemberReq::IMGroupChangeMemberReq(const IMGroupChangeMemberReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      member_id_list_(from.member_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupChangeMemberReq)
}

void IMGroupChangeMemberReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_id_));
  _cached_size_ = 0;
}

IMGroupChangeMemberReq::~IMGroupChangeMemberReq() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupChangeMemberReq)
  SharedDtor();
}

void IMGroupChangeMemberReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupChangeMemberReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IMGroupChangeMemberReq& IMGroupChangeMemberReq::default_instance() {
  protobuf_IM_2eGroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

IMGroupChangeMemberReq* IMGroupChangeMemberReq::New(::google::protobuf::Arena* arena) const {
  IMGroupChangeMemberReq* n = new IMGroupChangeMemberReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupChangeMemberReq::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupChangeMemberReq)
  member_id_list_.Clear();
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_id_));
}

bool IMGroupChangeMemberReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupChangeMemberReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.GroupModifyType change_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_change_type(static_cast< ::IM::BaseDefine::GroupModifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 member_id_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_member_id_list())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(32u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_member_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupChangeMemberReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupChangeMemberReq)
  return false;
#undef DO_
}

void IMGroupChangeMemberReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupChangeMemberReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->change_type(), output);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_id(), output);
  }

  // repeated uint32 member_id_list = 4;
  if (this->member_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_member_id_list_cached_byte_size_);
  }
  for (int i = 0, n = this->member_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->member_id_list(i), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupChangeMemberReq)
}

size_t IMGroupChangeMemberReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupChangeMemberReq)
  size_t total_size = 0;

  // repeated uint32 member_id_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->member_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _member_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->change_type());
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupChangeMemberReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMGroupChangeMemberReq*>(&from));
}

void IMGroupChangeMemberReq::MergeFrom(const IMGroupChangeMemberReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupChangeMemberReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_id_list_.MergeFrom(from.member_id_list_);
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.change_type() != 0) {
    set_change_type(from.change_type());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void IMGroupChangeMemberReq::CopyFrom(const IMGroupChangeMemberReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupChangeMemberReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupChangeMemberReq::IsInitialized() const {
  return true;
}

void IMGroupChangeMemberReq::Swap(IMGroupChangeMemberReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupChangeMemberReq::InternalSwap(IMGroupChangeMemberReq* other) {
  member_id_list_.InternalSwap(&other->member_id_list_);
  attach_data_.Swap(&other->attach_data_);
  std::swap(user_id_, other->user_id_);
  std::swap(change_type_, other->change_type_);
  std::swap(group_id_, other->group_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IMGroupChangeMemberReq::GetTypeName() const {
  return "IM.Group.IMGroupChangeMemberReq";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMGroupChangeMemberReq

// uint32 user_id = 1;
void IMGroupChangeMemberReq::clear_user_id() {
  user_id_ = 0u;
}
::google::protobuf::uint32 IMGroupChangeMemberReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberReq.user_id)
  return user_id_;
}
void IMGroupChangeMemberReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberReq.user_id)
}

// .IM.BaseDefine.GroupModifyType change_type = 2;
void IMGroupChangeMemberReq::clear_change_type() {
  change_type_ = 0;
}
::IM::BaseDefine::GroupModifyType IMGroupChangeMemberReq::change_type() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberReq.change_type)
  return static_cast< ::IM::BaseDefine::GroupModifyType >(change_type_);
}
void IMGroupChangeMemberReq::set_change_type(::IM::BaseDefine::GroupModifyType value) {
  
  change_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberReq.change_type)
}

// uint32 group_id = 3;
void IMGroupChangeMemberReq::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 IMGroupChangeMemberReq::group_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberReq.group_id)
  return group_id_;
}
void IMGroupChangeMemberReq::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberReq.group_id)
}

// repeated uint32 member_id_list = 4;
int IMGroupChangeMemberReq::member_id_list_size() const {
  return member_id_list_.size();
}
void IMGroupChangeMemberReq::clear_member_id_list() {
  member_id_list_.Clear();
}
::google::protobuf::uint32 IMGroupChangeMemberReq::member_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberReq.member_id_list)
  return member_id_list_.Get(index);
}
void IMGroupChangeMemberReq::set_member_id_list(int index, ::google::protobuf::uint32 value) {
  member_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberReq.member_id_list)
}
void IMGroupChangeMemberReq::add_member_id_list(::google::protobuf::uint32 value) {
  member_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:IM.Group.IMGroupChangeMemberReq.member_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
IMGroupChangeMemberReq::member_id_list() const {
  // @@protoc_insertion_point(field_list:IM.Group.IMGroupChangeMemberReq.member_id_list)
  return member_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
IMGroupChangeMemberReq::mutable_member_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Group.IMGroupChangeMemberReq.member_id_list)
  return &member_id_list_;
}

// bytes attach_data = 20;
void IMGroupChangeMemberReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMGroupChangeMemberReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberReq.attach_data)
  return attach_data_.GetNoArena();
}
void IMGroupChangeMemberReq::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberReq.attach_data)
}
#if LANG_CXX11
void IMGroupChangeMemberReq::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMGroupChangeMemberReq.attach_data)
}
#endif
void IMGroupChangeMemberReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMGroupChangeMemberReq.attach_data)
}
void IMGroupChangeMemberReq::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMGroupChangeMemberReq.attach_data)
}
::std::string* IMGroupChangeMemberReq::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupChangeMemberReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMGroupChangeMemberReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Group.IMGroupChangeMemberReq.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMGroupChangeMemberReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMGroupChangeMemberReq.attach_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupChangeMemberRsp::kUserIdFieldNumber;
const int IMGroupChangeMemberRsp::kChangeTypeFieldNumber;
const int IMGroupChangeMemberRsp::kResultCodeFieldNumber;
const int IMGroupChangeMemberRsp::kGroupIdFieldNumber;
const int IMGroupChangeMemberRsp::kCurUserIdListFieldNumber;
const int IMGroupChangeMemberRsp::kChgUserIdListFieldNumber;
const int IMGroupChangeMemberRsp::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupChangeMemberRsp::IMGroupChangeMemberRsp()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_IM_2eGroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupChangeMemberRsp)
}
IMGroupChangeMemberRsp::IMGroupChangeMemberRsp(const IMGroupChangeMemberRsp& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      cur_user_id_list_(from.cur_user_id_list_),
      chg_user_id_list_(from.chg_user_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupChangeMemberRsp)
}

void IMGroupChangeMemberRsp::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_id_));
  _cached_size_ = 0;
}

IMGroupChangeMemberRsp::~IMGroupChangeMemberRsp() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupChangeMemberRsp)
  SharedDtor();
}

void IMGroupChangeMemberRsp::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupChangeMemberRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IMGroupChangeMemberRsp& IMGroupChangeMemberRsp::default_instance() {
  protobuf_IM_2eGroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

IMGroupChangeMemberRsp* IMGroupChangeMemberRsp::New(::google::protobuf::Arena* arena) const {
  IMGroupChangeMemberRsp* n = new IMGroupChangeMemberRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupChangeMemberRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupChangeMemberRsp)
  cur_user_id_list_.Clear();
  chg_user_id_list_.Clear();
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_id_));
}

bool IMGroupChangeMemberRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupChangeMemberRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.GroupModifyType change_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_change_type(static_cast< ::IM::BaseDefine::GroupModifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 cur_user_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_cur_user_id_list())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(40u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_cur_user_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 chg_user_id_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_chg_user_id_list())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(48u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_chg_user_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupChangeMemberRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupChangeMemberRsp)
  return false;
#undef DO_
}

void IMGroupChangeMemberRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupChangeMemberRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->change_type(), output);
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->result_code(), output);
  }

  // uint32 group_id = 4;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->group_id(), output);
  }

  // repeated uint32 cur_user_id_list = 5;
  if (this->cur_user_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_cur_user_id_list_cached_byte_size_);
  }
  for (int i = 0, n = this->cur_user_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->cur_user_id_list(i), output);
  }

  // repeated uint32 chg_user_id_list = 6;
  if (this->chg_user_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_chg_user_id_list_cached_byte_size_);
  }
  for (int i = 0, n = this->chg_user_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->chg_user_id_list(i), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupChangeMemberRsp)
}

size_t IMGroupChangeMemberRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupChangeMemberRsp)
  size_t total_size = 0;

  // repeated uint32 cur_user_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->cur_user_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cur_user_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 chg_user_id_list = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->chg_user_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _chg_user_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->change_type());
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_code());
  }

  // uint32 group_id = 4;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupChangeMemberRsp::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMGroupChangeMemberRsp*>(&from));
}

void IMGroupChangeMemberRsp::MergeFrom(const IMGroupChangeMemberRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupChangeMemberRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cur_user_id_list_.MergeFrom(from.cur_user_id_list_);
  chg_user_id_list_.MergeFrom(from.chg_user_id_list_);
  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.change_type() != 0) {
    set_change_type(from.change_type());
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void IMGroupChangeMemberRsp::CopyFrom(const IMGroupChangeMemberRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupChangeMemberRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupChangeMemberRsp::IsInitialized() const {
  return true;
}

void IMGroupChangeMemberRsp::Swap(IMGroupChangeMemberRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupChangeMemberRsp::InternalSwap(IMGroupChangeMemberRsp* other) {
  cur_user_id_list_.InternalSwap(&other->cur_user_id_list_);
  chg_user_id_list_.InternalSwap(&other->chg_user_id_list_);
  attach_data_.Swap(&other->attach_data_);
  std::swap(user_id_, other->user_id_);
  std::swap(change_type_, other->change_type_);
  std::swap(result_code_, other->result_code_);
  std::swap(group_id_, other->group_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IMGroupChangeMemberRsp::GetTypeName() const {
  return "IM.Group.IMGroupChangeMemberRsp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMGroupChangeMemberRsp

// uint32 user_id = 1;
void IMGroupChangeMemberRsp::clear_user_id() {
  user_id_ = 0u;
}
::google::protobuf::uint32 IMGroupChangeMemberRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberRsp.user_id)
  return user_id_;
}
void IMGroupChangeMemberRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberRsp.user_id)
}

// .IM.BaseDefine.GroupModifyType change_type = 2;
void IMGroupChangeMemberRsp::clear_change_type() {
  change_type_ = 0;
}
::IM::BaseDefine::GroupModifyType IMGroupChangeMemberRsp::change_type() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberRsp.change_type)
  return static_cast< ::IM::BaseDefine::GroupModifyType >(change_type_);
}
void IMGroupChangeMemberRsp::set_change_type(::IM::BaseDefine::GroupModifyType value) {
  
  change_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberRsp.change_type)
}

// uint32 result_code = 3;
void IMGroupChangeMemberRsp::clear_result_code() {
  result_code_ = 0u;
}
::google::protobuf::uint32 IMGroupChangeMemberRsp::result_code() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberRsp.result_code)
  return result_code_;
}
void IMGroupChangeMemberRsp::set_result_code(::google::protobuf::uint32 value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberRsp.result_code)
}

// uint32 group_id = 4;
void IMGroupChangeMemberRsp::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 IMGroupChangeMemberRsp::group_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberRsp.group_id)
  return group_id_;
}
void IMGroupChangeMemberRsp::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberRsp.group_id)
}

// repeated uint32 cur_user_id_list = 5;
int IMGroupChangeMemberRsp::cur_user_id_list_size() const {
  return cur_user_id_list_.size();
}
void IMGroupChangeMemberRsp::clear_cur_user_id_list() {
  cur_user_id_list_.Clear();
}
::google::protobuf::uint32 IMGroupChangeMemberRsp::cur_user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberRsp.cur_user_id_list)
  return cur_user_id_list_.Get(index);
}
void IMGroupChangeMemberRsp::set_cur_user_id_list(int index, ::google::protobuf::uint32 value) {
  cur_user_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberRsp.cur_user_id_list)
}
void IMGroupChangeMemberRsp::add_cur_user_id_list(::google::protobuf::uint32 value) {
  cur_user_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:IM.Group.IMGroupChangeMemberRsp.cur_user_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
IMGroupChangeMemberRsp::cur_user_id_list() const {
  // @@protoc_insertion_point(field_list:IM.Group.IMGroupChangeMemberRsp.cur_user_id_list)
  return cur_user_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
IMGroupChangeMemberRsp::mutable_cur_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Group.IMGroupChangeMemberRsp.cur_user_id_list)
  return &cur_user_id_list_;
}

// repeated uint32 chg_user_id_list = 6;
int IMGroupChangeMemberRsp::chg_user_id_list_size() const {
  return chg_user_id_list_.size();
}
void IMGroupChangeMemberRsp::clear_chg_user_id_list() {
  chg_user_id_list_.Clear();
}
::google::protobuf::uint32 IMGroupChangeMemberRsp::chg_user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberRsp.chg_user_id_list)
  return chg_user_id_list_.Get(index);
}
void IMGroupChangeMemberRsp::set_chg_user_id_list(int index, ::google::protobuf::uint32 value) {
  chg_user_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberRsp.chg_user_id_list)
}
void IMGroupChangeMemberRsp::add_chg_user_id_list(::google::protobuf::uint32 value) {
  chg_user_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:IM.Group.IMGroupChangeMemberRsp.chg_user_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
IMGroupChangeMemberRsp::chg_user_id_list() const {
  // @@protoc_insertion_point(field_list:IM.Group.IMGroupChangeMemberRsp.chg_user_id_list)
  return chg_user_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
IMGroupChangeMemberRsp::mutable_chg_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Group.IMGroupChangeMemberRsp.chg_user_id_list)
  return &chg_user_id_list_;
}

// bytes attach_data = 20;
void IMGroupChangeMemberRsp::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMGroupChangeMemberRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberRsp.attach_data)
  return attach_data_.GetNoArena();
}
void IMGroupChangeMemberRsp::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberRsp.attach_data)
}
#if LANG_CXX11
void IMGroupChangeMemberRsp::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMGroupChangeMemberRsp.attach_data)
}
#endif
void IMGroupChangeMemberRsp::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMGroupChangeMemberRsp.attach_data)
}
void IMGroupChangeMemberRsp::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMGroupChangeMemberRsp.attach_data)
}
::std::string* IMGroupChangeMemberRsp::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupChangeMemberRsp.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMGroupChangeMemberRsp::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Group.IMGroupChangeMemberRsp.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMGroupChangeMemberRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMGroupChangeMemberRsp.attach_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupShieldReq::kUserIdFieldNumber;
const int IMGroupShieldReq::kGroupIdFieldNumber;
const int IMGroupShieldReq::kShieldStatusFieldNumber;
const int IMGroupShieldReq::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupShieldReq::IMGroupShieldReq()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_IM_2eGroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupShieldReq)
}
IMGroupShieldReq::IMGroupShieldReq(const IMGroupShieldReq& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    reinterpret_cast<char*>(&shield_status_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(shield_status_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupShieldReq)
}

void IMGroupShieldReq::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&shield_status_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(shield_status_));
  _cached_size_ = 0;
}

IMGroupShieldReq::~IMGroupShieldReq() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupShieldReq)
  SharedDtor();
}

void IMGroupShieldReq::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupShieldReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IMGroupShieldReq& IMGroupShieldReq::default_instance() {
  protobuf_IM_2eGroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

IMGroupShieldReq* IMGroupShieldReq::New(::google::protobuf::Arena* arena) const {
  IMGroupShieldReq* n = new IMGroupShieldReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupShieldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupShieldReq)
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&shield_status_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(shield_status_));
}

bool IMGroupShieldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupShieldReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 shield_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shield_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupShieldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupShieldReq)
  return false;
#undef DO_
}

void IMGroupShieldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupShieldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // uint32 shield_status = 3;
  if (this->shield_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->shield_status(), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupShieldReq)
}

size_t IMGroupShieldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupShieldReq)
  size_t total_size = 0;

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 shield_status = 3;
  if (this->shield_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shield_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupShieldReq::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMGroupShieldReq*>(&from));
}

void IMGroupShieldReq::MergeFrom(const IMGroupShieldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupShieldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.shield_status() != 0) {
    set_shield_status(from.shield_status());
  }
}

void IMGroupShieldReq::CopyFrom(const IMGroupShieldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupShieldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupShieldReq::IsInitialized() const {
  return true;
}

void IMGroupShieldReq::Swap(IMGroupShieldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupShieldReq::InternalSwap(IMGroupShieldReq* other) {
  attach_data_.Swap(&other->attach_data_);
  std::swap(user_id_, other->user_id_);
  std::swap(group_id_, other->group_id_);
  std::swap(shield_status_, other->shield_status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IMGroupShieldReq::GetTypeName() const {
  return "IM.Group.IMGroupShieldReq";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMGroupShieldReq

// uint32 user_id = 1;
void IMGroupShieldReq::clear_user_id() {
  user_id_ = 0u;
}
::google::protobuf::uint32 IMGroupShieldReq::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupShieldReq.user_id)
  return user_id_;
}
void IMGroupShieldReq::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupShieldReq.user_id)
}

// uint32 group_id = 2;
void IMGroupShieldReq::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 IMGroupShieldReq::group_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupShieldReq.group_id)
  return group_id_;
}
void IMGroupShieldReq::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupShieldReq.group_id)
}

// uint32 shield_status = 3;
void IMGroupShieldReq::clear_shield_status() {
  shield_status_ = 0u;
}
::google::protobuf::uint32 IMGroupShieldReq::shield_status() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupShieldReq.shield_status)
  return shield_status_;
}
void IMGroupShieldReq::set_shield_status(::google::protobuf::uint32 value) {
  
  shield_status_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupShieldReq.shield_status)
}

// bytes attach_data = 20;
void IMGroupShieldReq::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMGroupShieldReq::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupShieldReq.attach_data)
  return attach_data_.GetNoArena();
}
void IMGroupShieldReq::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupShieldReq.attach_data)
}
#if LANG_CXX11
void IMGroupShieldReq::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMGroupShieldReq.attach_data)
}
#endif
void IMGroupShieldReq::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMGroupShieldReq.attach_data)
}
void IMGroupShieldReq::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMGroupShieldReq.attach_data)
}
::std::string* IMGroupShieldReq::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupShieldReq.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMGroupShieldReq::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Group.IMGroupShieldReq.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMGroupShieldReq::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMGroupShieldReq.attach_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupShieldRsp::kUserIdFieldNumber;
const int IMGroupShieldRsp::kGroupIdFieldNumber;
const int IMGroupShieldRsp::kResultCodeFieldNumber;
const int IMGroupShieldRsp::kAttachDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupShieldRsp::IMGroupShieldRsp()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_IM_2eGroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupShieldRsp)
}
IMGroupShieldRsp::IMGroupShieldRsp(const IMGroupShieldRsp& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attach_data().size() > 0) {
    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    reinterpret_cast<char*>(&result_code_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(result_code_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupShieldRsp)
}

void IMGroupShieldRsp::SharedCtor() {
  attach_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&result_code_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(result_code_));
  _cached_size_ = 0;
}

IMGroupShieldRsp::~IMGroupShieldRsp() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupShieldRsp)
  SharedDtor();
}

void IMGroupShieldRsp::SharedDtor() {
  attach_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IMGroupShieldRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IMGroupShieldRsp& IMGroupShieldRsp::default_instance() {
  protobuf_IM_2eGroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

IMGroupShieldRsp* IMGroupShieldRsp::New(::google::protobuf::Arena* arena) const {
  IMGroupShieldRsp* n = new IMGroupShieldRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupShieldRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupShieldRsp)
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&result_code_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(result_code_));
}

bool IMGroupShieldRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupShieldRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes attach_data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_attach_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupShieldRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupShieldRsp)
  return false;
#undef DO_
}

void IMGroupShieldRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupShieldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->result_code(), output);
  }

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->attach_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupShieldRsp)
}

size_t IMGroupShieldRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupShieldRsp)
  size_t total_size = 0;

  // bytes attach_data = 20;
  if (this->attach_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->attach_data());
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 result_code = 3;
  if (this->result_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupShieldRsp::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMGroupShieldRsp*>(&from));
}

void IMGroupShieldRsp::MergeFrom(const IMGroupShieldRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupShieldRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attach_data().size() > 0) {

    attach_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attach_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.result_code() != 0) {
    set_result_code(from.result_code());
  }
}

void IMGroupShieldRsp::CopyFrom(const IMGroupShieldRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupShieldRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupShieldRsp::IsInitialized() const {
  return true;
}

void IMGroupShieldRsp::Swap(IMGroupShieldRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupShieldRsp::InternalSwap(IMGroupShieldRsp* other) {
  attach_data_.Swap(&other->attach_data_);
  std::swap(user_id_, other->user_id_);
  std::swap(group_id_, other->group_id_);
  std::swap(result_code_, other->result_code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IMGroupShieldRsp::GetTypeName() const {
  return "IM.Group.IMGroupShieldRsp";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMGroupShieldRsp

// uint32 user_id = 1;
void IMGroupShieldRsp::clear_user_id() {
  user_id_ = 0u;
}
::google::protobuf::uint32 IMGroupShieldRsp::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupShieldRsp.user_id)
  return user_id_;
}
void IMGroupShieldRsp::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupShieldRsp.user_id)
}

// uint32 group_id = 2;
void IMGroupShieldRsp::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 IMGroupShieldRsp::group_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupShieldRsp.group_id)
  return group_id_;
}
void IMGroupShieldRsp::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupShieldRsp.group_id)
}

// uint32 result_code = 3;
void IMGroupShieldRsp::clear_result_code() {
  result_code_ = 0u;
}
::google::protobuf::uint32 IMGroupShieldRsp::result_code() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupShieldRsp.result_code)
  return result_code_;
}
void IMGroupShieldRsp::set_result_code(::google::protobuf::uint32 value) {
  
  result_code_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupShieldRsp.result_code)
}

// bytes attach_data = 20;
void IMGroupShieldRsp::clear_attach_data() {
  attach_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IMGroupShieldRsp::attach_data() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupShieldRsp.attach_data)
  return attach_data_.GetNoArena();
}
void IMGroupShieldRsp::set_attach_data(const ::std::string& value) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupShieldRsp.attach_data)
}
#if LANG_CXX11
void IMGroupShieldRsp::set_attach_data(::std::string&& value) {
  
  attach_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IM.Group.IMGroupShieldRsp.attach_data)
}
#endif
void IMGroupShieldRsp::set_attach_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IM.Group.IMGroupShieldRsp.attach_data)
}
void IMGroupShieldRsp::set_attach_data(const void* value, size_t size) {
  
  attach_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IM.Group.IMGroupShieldRsp.attach_data)
}
::std::string* IMGroupShieldRsp::mutable_attach_data() {
  
  // @@protoc_insertion_point(field_mutable:IM.Group.IMGroupShieldRsp.attach_data)
  return attach_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IMGroupShieldRsp::release_attach_data() {
  // @@protoc_insertion_point(field_release:IM.Group.IMGroupShieldRsp.attach_data)
  
  return attach_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IMGroupShieldRsp::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data != NULL) {
    
  } else {
    
  }
  attach_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attach_data);
  // @@protoc_insertion_point(field_set_allocated:IM.Group.IMGroupShieldRsp.attach_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IMGroupChangeMemberNotify::kUserIdFieldNumber;
const int IMGroupChangeMemberNotify::kChangeTypeFieldNumber;
const int IMGroupChangeMemberNotify::kGroupIdFieldNumber;
const int IMGroupChangeMemberNotify::kCurUserIdListFieldNumber;
const int IMGroupChangeMemberNotify::kChgUserIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IMGroupChangeMemberNotify::IMGroupChangeMemberNotify()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_IM_2eGroup_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.Group.IMGroupChangeMemberNotify)
}
IMGroupChangeMemberNotify::IMGroupChangeMemberNotify(const IMGroupChangeMemberNotify& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      cur_user_id_list_(from.cur_user_id_list_),
      chg_user_id_list_(from.chg_user_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_id_, &from.user_id_,
    reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:IM.Group.IMGroupChangeMemberNotify)
}

void IMGroupChangeMemberNotify::SharedCtor() {
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_id_));
  _cached_size_ = 0;
}

IMGroupChangeMemberNotify::~IMGroupChangeMemberNotify() {
  // @@protoc_insertion_point(destructor:IM.Group.IMGroupChangeMemberNotify)
  SharedDtor();
}

void IMGroupChangeMemberNotify::SharedDtor() {
}

void IMGroupChangeMemberNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const IMGroupChangeMemberNotify& IMGroupChangeMemberNotify::default_instance() {
  protobuf_IM_2eGroup_2eproto::InitDefaults();
  return *internal_default_instance();
}

IMGroupChangeMemberNotify* IMGroupChangeMemberNotify::New(::google::protobuf::Arena* arena) const {
  IMGroupChangeMemberNotify* n = new IMGroupChangeMemberNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IMGroupChangeMemberNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:IM.Group.IMGroupChangeMemberNotify)
  cur_user_id_list_.Clear();
  chg_user_id_list_.Clear();
  ::memset(&user_id_, 0, reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&user_id_) + sizeof(group_id_));
}

bool IMGroupChangeMemberNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.Group.IMGroupChangeMemberNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IM.BaseDefine.GroupModifyType change_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_change_type(static_cast< ::IM::BaseDefine::GroupModifyType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 cur_user_id_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_cur_user_id_list())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(32u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_cur_user_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 chg_user_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_chg_user_id_list())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(40u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_chg_user_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.Group.IMGroupChangeMemberNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.Group.IMGroupChangeMemberNotify)
  return false;
#undef DO_
}

void IMGroupChangeMemberNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.Group.IMGroupChangeMemberNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_id(), output);
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->change_type(), output);
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->group_id(), output);
  }

  // repeated uint32 cur_user_id_list = 4;
  if (this->cur_user_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_cur_user_id_list_cached_byte_size_);
  }
  for (int i = 0, n = this->cur_user_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->cur_user_id_list(i), output);
  }

  // repeated uint32 chg_user_id_list = 5;
  if (this->chg_user_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_chg_user_id_list_cached_byte_size_);
  }
  for (int i = 0, n = this->chg_user_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->chg_user_id_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.Group.IMGroupChangeMemberNotify)
}

size_t IMGroupChangeMemberNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IM.Group.IMGroupChangeMemberNotify)
  size_t total_size = 0;

  // repeated uint32 cur_user_id_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->cur_user_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cur_user_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 chg_user_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->chg_user_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _chg_user_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_id());
  }

  // .IM.BaseDefine.GroupModifyType change_type = 2;
  if (this->change_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->change_type());
  }

  // uint32 group_id = 3;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IMGroupChangeMemberNotify::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IMGroupChangeMemberNotify*>(&from));
}

void IMGroupChangeMemberNotify::MergeFrom(const IMGroupChangeMemberNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IM.Group.IMGroupChangeMemberNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cur_user_id_list_.MergeFrom(from.cur_user_id_list_);
  chg_user_id_list_.MergeFrom(from.chg_user_id_list_);
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.change_type() != 0) {
    set_change_type(from.change_type());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void IMGroupChangeMemberNotify::CopyFrom(const IMGroupChangeMemberNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IM.Group.IMGroupChangeMemberNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMGroupChangeMemberNotify::IsInitialized() const {
  return true;
}

void IMGroupChangeMemberNotify::Swap(IMGroupChangeMemberNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IMGroupChangeMemberNotify::InternalSwap(IMGroupChangeMemberNotify* other) {
  cur_user_id_list_.InternalSwap(&other->cur_user_id_list_);
  chg_user_id_list_.InternalSwap(&other->chg_user_id_list_);
  std::swap(user_id_, other->user_id_);
  std::swap(change_type_, other->change_type_);
  std::swap(group_id_, other->group_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string IMGroupChangeMemberNotify::GetTypeName() const {
  return "IM.Group.IMGroupChangeMemberNotify";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IMGroupChangeMemberNotify

// uint32 user_id = 1;
void IMGroupChangeMemberNotify::clear_user_id() {
  user_id_ = 0u;
}
::google::protobuf::uint32 IMGroupChangeMemberNotify::user_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberNotify.user_id)
  return user_id_;
}
void IMGroupChangeMemberNotify::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberNotify.user_id)
}

// .IM.BaseDefine.GroupModifyType change_type = 2;
void IMGroupChangeMemberNotify::clear_change_type() {
  change_type_ = 0;
}
::IM::BaseDefine::GroupModifyType IMGroupChangeMemberNotify::change_type() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberNotify.change_type)
  return static_cast< ::IM::BaseDefine::GroupModifyType >(change_type_);
}
void IMGroupChangeMemberNotify::set_change_type(::IM::BaseDefine::GroupModifyType value) {
  
  change_type_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberNotify.change_type)
}

// uint32 group_id = 3;
void IMGroupChangeMemberNotify::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 IMGroupChangeMemberNotify::group_id() const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberNotify.group_id)
  return group_id_;
}
void IMGroupChangeMemberNotify::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberNotify.group_id)
}

// repeated uint32 cur_user_id_list = 4;
int IMGroupChangeMemberNotify::cur_user_id_list_size() const {
  return cur_user_id_list_.size();
}
void IMGroupChangeMemberNotify::clear_cur_user_id_list() {
  cur_user_id_list_.Clear();
}
::google::protobuf::uint32 IMGroupChangeMemberNotify::cur_user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberNotify.cur_user_id_list)
  return cur_user_id_list_.Get(index);
}
void IMGroupChangeMemberNotify::set_cur_user_id_list(int index, ::google::protobuf::uint32 value) {
  cur_user_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberNotify.cur_user_id_list)
}
void IMGroupChangeMemberNotify::add_cur_user_id_list(::google::protobuf::uint32 value) {
  cur_user_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:IM.Group.IMGroupChangeMemberNotify.cur_user_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
IMGroupChangeMemberNotify::cur_user_id_list() const {
  // @@protoc_insertion_point(field_list:IM.Group.IMGroupChangeMemberNotify.cur_user_id_list)
  return cur_user_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
IMGroupChangeMemberNotify::mutable_cur_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Group.IMGroupChangeMemberNotify.cur_user_id_list)
  return &cur_user_id_list_;
}

// repeated uint32 chg_user_id_list = 5;
int IMGroupChangeMemberNotify::chg_user_id_list_size() const {
  return chg_user_id_list_.size();
}
void IMGroupChangeMemberNotify::clear_chg_user_id_list() {
  chg_user_id_list_.Clear();
}
::google::protobuf::uint32 IMGroupChangeMemberNotify::chg_user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:IM.Group.IMGroupChangeMemberNotify.chg_user_id_list)
  return chg_user_id_list_.Get(index);
}
void IMGroupChangeMemberNotify::set_chg_user_id_list(int index, ::google::protobuf::uint32 value) {
  chg_user_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:IM.Group.IMGroupChangeMemberNotify.chg_user_id_list)
}
void IMGroupChangeMemberNotify::add_chg_user_id_list(::google::protobuf::uint32 value) {
  chg_user_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:IM.Group.IMGroupChangeMemberNotify.chg_user_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
IMGroupChangeMemberNotify::chg_user_id_list() const {
  // @@protoc_insertion_point(field_list:IM.Group.IMGroupChangeMemberNotify.chg_user_id_list)
  return chg_user_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
IMGroupChangeMemberNotify::mutable_chg_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:IM.Group.IMGroupChangeMemberNotify.chg_user_id_list)
  return &chg_user_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Group
}  // namespace IM

// @@protoc_insertion_point(global_scope)
